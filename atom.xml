<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>iKoo&#39;s Dirty life</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://gythialy.github.io/"/>
  <updated>2017-08-07T15:55:12.427Z</updated>
  <id>https://gythialy.github.io/</id>
  
  <author>
    <name>gythialy</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Java 通过 JNA 调用 C/C++ 接口</title>
    <link href="https://gythialy.github.io/jna/"/>
    <id>https://gythialy.github.io/jna/</id>
    <published>2017-08-07T09:31:21.000Z</published>
    <updated>2017-08-07T15:55:12.427Z</updated>
    
    <content type="html"><![CDATA[<h3>缘起</h3>
<p>项目中调用了第三方一个 Matlab 实现的数据清洗和机组状态评价的算法，但是对方不会除 Matlab 外的其他语言，最后只用 Matlab 生成了一个 dll/lib 文件。由于对方提供的接口质量真心不好，而且对方也无力修改。最终方案只好由我方在其基础上用 C++ 重新包装一下。在给我方 Client 调用时，需要把从多数据源查询数据的细节封装掉，最终就形成了Java Client-&gt; Java Interface-&gt;C++ Interface-&gt;Matlab/C++ Interface(第三方) 这样一个诡异的调用链。</p>
<p>因只是 Java 单向调用 C++ 接口，故通过 <a href="https://github.com/java-native-access/jna" title="Java Native Access" target="_blank" rel="external">JNA</a> 实现。主要设计到 JNA 的结构体封装，指针声明及取值，结构体指针定义及取值。</p>
<h3>实现</h3>
<p>C++ 的封装接口逻辑非常简单，根据业务提供数据清洗和机组评价的两个接口。</p>
<p>由于Matlab 导出的 dll 效率是真心差，尤其时加载的时候，各种抛异常，每次加载dll大约需耗时20~30s。所以不能每次加载，故提供 <code>init/terminator</code> 实现按需加载及停用。</p>
<h4>C/C++ 头文件定义</h4>
<p><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> __CALCULATOR_API_H__</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> __CALCULATOR_API_H__</span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdint&gt;</span></span></div><div class="line"></div><div class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> WIN32</span></div><div class="line"><span class="meta">#  <span class="meta-keyword">define</span> EXPORT_API __declspec(dllexport)</span></div><div class="line"><span class="meta">#<span class="meta-keyword">else</span></span></div><div class="line"><span class="meta">#  <span class="meta-keyword">define</span> EXPORT_API </span></div><div class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></div><div class="line"></div><div class="line"><span class="comment">// Random number to avoid errno conflicts</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> CALCULATOR_ENOBASE 112345678</span></div><div class="line"></div><div class="line"><span class="comment">/* Calculator exceptions */</span></div><div class="line"><span class="keyword">enum</span></div><div class="line">&#123;</div><div class="line">	CALCULATOR_EXCEPTION_ILLEGAL_FUNCTION = <span class="number">0x01</span>,</div><div class="line">	CALCULATOR_EXCEPTION_ILLEGAL_PARA</div><div class="line">&#125;;</div><div class="line"></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> EMBXILFUN  (CALCULATOR_ENOBASE + CALCULATOR_EXCEPTION_ILLEGAL_FUNCTION)</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> EMBXILPARA  (CALCULATOR_ENOBASE + CALCULATOR_EXCEPTION_ILLEGAL_PARA)</span></div><div class="line"></div><div class="line"><span class="keyword">typedef</span> <span class="keyword">enum</span></div><div class="line">&#123;</div><div class="line">	H2 = <span class="number">0X01</span>,</div><div class="line">	CH4,</div><div class="line">	C2H2,</div><div class="line">	C2H4,</div><div class="line">	TOTAL_HYDROCARBON,<span class="comment">//总烃</span></div><div class="line">	CO,</div><div class="line">	CO2</div><div class="line">&#125; OilChromatographyType;</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"><span class="comment"> * 数据清洗结果</span></div><div class="line"><span class="comment"> */</span></div><div class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">sImproveResult</span></span></div><div class="line"><span class="class">&#123;</span></div><div class="line">	<span class="keyword">int32_t</span> valid; <span class="comment">// 有效数据个数</span></div><div class="line">	<span class="keyword">float</span> validPercent; <span class="comment">// 数据有效值占比</span></div><div class="line">	<span class="keyword">float</span>* abnormalData; <span class="comment">// 异常数据</span></div><div class="line">	<span class="keyword">int32_t</span> abnormal_size; <span class="comment">// 异常数据个数</span></div><div class="line">	<span class="keyword">float</span>* optimizeData; <span class="comment">// 优化后的数据</span></div><div class="line">	<span class="keyword">int32_t</span> optimize_size; <span class="comment">// 优化数据个数</span></div><div class="line">&#125; sImproveResult, *ImproveResult;</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"><span class="comment"> * 变压器输入参数</span></div><div class="line"><span class="comment"> */</span></div><div class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">sTransformer</span></span></div><div class="line"><span class="class">&#123;</span></div><div class="line">	<span class="keyword">float</span> h2Value;</div><div class="line">	<span class="keyword">float</span> totalHydrocarbon; <span class="comment">// 总烃</span></div><div class="line">	<span class="keyword">float</span> c2h2Value;</div><div class="line">	<span class="keyword">float</span> coValue;</div><div class="line">	<span class="keyword">float</span> co2Value;</div><div class="line">	<span class="keyword">float</span> dielectricLoss; <span class="comment">// 介损</span></div><div class="line">	<span class="keyword">float</span> dcResistance; <span class="comment">//直阻</span></div><div class="line">	<span class="keyword">float</span> absorptance; <span class="comment">//吸收比</span></div><div class="line">	<span class="keyword">float</span> polarizeFactor; <span class="comment">// 极化系数</span></div><div class="line">	<span class="keyword">float</span> electricCapacity; <span class="comment">// 电容量</span></div><div class="line">	<span class="keyword">float</span> moisture; <span class="comment">// 微水</span></div><div class="line">	<span class="keyword">float</span> breakdownVoltage; <span class="comment">// 击穿电压</span></div><div class="line">	<span class="keyword">float</span> oilDielectricLoss; <span class="comment">// 油介损</span></div><div class="line">	<span class="keyword">float</span> interfacialTension; <span class="comment">//界面张力</span></div><div class="line">	<span class="keyword">float</span> electricResistivity; <span class="comment">//电阻率</span></div><div class="line">	<span class="keyword">int16_t</span> runningLife; <span class="comment">// 运行年限</span></div><div class="line">	<span class="keyword">float</span> ambientTemperature; <span class="comment">// 环境温度</span></div><div class="line">	<span class="keyword">float</span> jointTemperature; <span class="comment">//接头温度</span></div><div class="line">	<span class="keyword">float</span> oilTankTemperature; <span class="comment">// 油箱温度</span></div><div class="line">&#125; sTransformer, *Transformer;</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"><span class="comment"> * 因素状态隶属度结果</span></div><div class="line"><span class="comment"> */</span></div><div class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">sFusionResult</span></span></div><div class="line"><span class="class">&#123;</span></div><div class="line">	<span class="keyword">float</span> *h1; <span class="comment">// 油色谱</span></div><div class="line">	<span class="keyword">int16_t</span> h1_size;</div><div class="line">	<span class="keyword">float</span> *h2; <span class="comment">// 电气试验</span></div><div class="line">	<span class="keyword">int16_t</span> h2_size;</div><div class="line">	<span class="keyword">float</span> *h3; <span class="comment">// 绝缘油</span></div><div class="line">	<span class="keyword">int16_t</span> h3_size;</div><div class="line">	<span class="keyword">float</span> *h4; <span class="comment">// 其余项</span></div><div class="line">	<span class="keyword">int16_t</span> h4_size;</div><div class="line">	<span class="keyword">float</span> qz1; <span class="comment">// 油色谱权重</span></div><div class="line">	<span class="keyword">float</span> qz2; <span class="comment">// 电气试验权重</span></div><div class="line">	<span class="keyword">float</span> qz3; <span class="comment">// 绝缘油权重</span></div><div class="line">	<span class="keyword">float</span> qz4; <span class="comment">// 其余项权重</span></div><div class="line">	<span class="keyword">float</span> m; <span class="comment">// 证据融合参数</span></div><div class="line">	<span class="keyword">float</span> n; <span class="comment">// 证据融合参数</span></div><div class="line">&#125; sFusionResult, *FusionResult;</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"><span class="comment"> * 最终评价结果</span></div><div class="line"><span class="comment"> */</span></div><div class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">sFactorResult</span></span></div><div class="line"><span class="class">&#123;</span></div><div class="line">	<span class="keyword">float</span>* state;</div><div class="line">	<span class="keyword">int16_t</span> state_size;</div><div class="line">	<span class="keyword">int8_t</span>* comment;</div><div class="line">	<span class="keyword">int16_t</span> comment_len;</div><div class="line">&#125; sFactorResult, *FactorResult;</div><div class="line"></div><div class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span></span></div><div class="line"><span class="class">&#123;</span></div><div class="line">	<span class="keyword">int64_t</span> time;</div><div class="line">	<span class="keyword">float</span> value;</div><div class="line">&#125; sImproveInput, *ImproveInput;</div><div class="line"></div><div class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">sReviewResult</span></span></div><div class="line"><span class="class">&#123;</span></div><div class="line">	Transformer indexScore;</div><div class="line">	<span class="keyword">int16_t</span> indexScore_size;</div><div class="line">	FusionResult indexFusion;</div><div class="line">	FactorResult factorFusion;</div><div class="line">&#125; sReviewResult, *ReviewResult;</div><div class="line"></div><div class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> __cplusplus</span></div><div class="line"><span class="keyword">extern</span> <span class="string">"C"</span></div><div class="line">&#123;</div><div class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></div><div class="line"></div><div class="line">	<span class="comment">/**</span></div><div class="line"><span class="comment">	 * 数据清洗</span></div><div class="line"><span class="comment">	 * @param  original[in]     原始数据起始地址</span></div><div class="line"><span class="comment">	 * @param  originalLen[in] 原始数据长度</span></div><div class="line"><span class="comment">	 * @param  result [out]      数据清洗结果</span></div><div class="line"><span class="comment">	 * @return 0:成功;非0：失败</span></div><div class="line"><span class="comment">	 */</span></div><div class="line">	<span class="function">EXPORT_API int16_t <span class="title">improve_data</span><span class="params">(<span class="keyword">const</span> ImproveInput original, <span class="keyword">const</span> <span class="keyword">int32_t</span> originalLen, ImproveResult result)</span></span>;</div><div class="line"></div><div class="line">	<span class="comment">/**</span></div><div class="line"><span class="comment">	 * 状态评价计算</span></div><div class="line"><span class="comment">	 * @param  transformer[in]  主变参数</span></div><div class="line"><span class="comment">	 * @param  result[out]     评价结果</span></div><div class="line"><span class="comment">	 * @return  0:成功;非0：失败</span></div><div class="line"><span class="comment">	 */</span></div><div class="line">	<span class="function">EXPORT_API int16_t <span class="title">review_transformer</span><span class="params">(<span class="keyword">const</span> Transformer transformer, ReviewResult result)</span></span>;</div><div class="line"></div><div class="line"></div><div class="line">	<span class="comment">/**</span></div><div class="line"><span class="comment">	 * 初始化 dll</span></div><div class="line"><span class="comment">	 * @return [description]</span></div><div class="line"><span class="comment">	 */</span></div><div class="line">	<span class="function">EXPORT_API int16_t <span class="title">init</span><span class="params">()</span></span>;</div><div class="line"></div><div class="line">	<span class="comment">/**</span></div><div class="line"><span class="comment">	 * 根据 err num 获取异常信息描述</span></div><div class="line"><span class="comment">	 * @param  errnum[in] errnum</span></div><div class="line"><span class="comment">	 * @return  errnum 对应的异常信息描述</span></div><div class="line"><span class="comment">	 */</span></div><div class="line">	<span class="function">EXPORT_API <span class="keyword">const</span> int8_t* <span class="title">calculator_strerror</span><span class="params">(<span class="keyword">int</span> errnum)</span></span>;</div><div class="line">  </div><div class="line">  	<span class="comment">/**</span></div><div class="line"><span class="comment">  	* 停止计算模块</span></div><div class="line"><span class="comment">  	**/</span></div><div class="line">  	<span class="function">EXPORT_API <span class="keyword">void</span> <span class="title">terminator</span><span class="params">()</span></span>;</div><div class="line"></div><div class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> __cplusplus</span></div><div class="line">&#125;</div><div class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">endif</span> <span class="comment">/*__CALCULATOR_API_H__*/</span></span></div></pre></td></tr></table></figure></p>
<h4>Java 接口定义</h4>
<ul>
<li>
<p><code>CalculatorApi</code></p>
<p><code>CalculatorApi</code> 提供与 C++ 头文件中声明一致的函数定义，继承 <code>Library</code></p>
</li>
</ul>
<p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> com.sun.jna.Library;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">CalculatorApi</span> <span class="keyword">extends</span> <span class="title">Library</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">int</span> <span class="title">improve_data</span><span class="params">(ImproveInputWrapper.ByReference original, <span class="keyword">int</span> originalLen, ImproveResultWrapper result)</span></span>;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">int</span> <span class="title">init</span><span class="params">()</span></span>;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">int</span> <span class="title">review_transformer</span><span class="params">(TransformerWrapper transformer, ReviewResult result)</span></span>;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">void</span> <span class="title">terminator</span><span class="params">()</span></span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<ul>
<li>
<p><code>FactorResultWrapper</code></p>
<p>作为 C++ 中 结构体 <code>FactorResult</code>的封装类，需要继承<code>Structure</code>，原始 <code>state</code>定义为 <code>float *</code>，通过 <code>Pointer</code> 与其对应。必须要实现 <code>getFieldOrder</code>,其中字段的顺序必须和 C++ 中保持一致，且所有相关字段必须要设成 <code>Public</code> 。使用的时候，用的引用传递，所以必须要实现<code>Structure.ByReference</code>接口。具体代码实现如下：</p>
</li>
</ul>
<p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> com.sun.jna.Pointer;</div><div class="line"><span class="keyword">import</span> com.sun.jna.Structure;</div><div class="line"></div><div class="line"><span class="keyword">import</span> java.util.List;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FactorResultWrapper</span> <span class="keyword">extends</span> <span class="title">Structure</span> </span>&#123;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> List&lt;String&gt; FIELDS_ORDER = createFieldsOrder(<span class="string">"state"</span>, <span class="string">"state_size"</span>, <span class="string">"comment"</span>, <span class="string">"comment_len"</span>);</div><div class="line">    <span class="keyword">public</span> Pointer state;</div><div class="line">    <span class="keyword">public</span> <span class="keyword">int</span> state_size;</div><div class="line">    <span class="keyword">public</span> String comment;</div><div class="line">    <span class="keyword">public</span> <span class="keyword">int</span> comment_len;</div><div class="line"></div><div class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">ByReference</span> <span class="keyword">extends</span> <span class="title">FactorResultWrapper</span> <span class="keyword">implements</span> <span class="title">Structure</span>.<span class="title">ByReference</span> </span>&#123;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">ByValue</span> <span class="keyword">extends</span> <span class="title">FactorResultWrapper</span> <span class="keyword">implements</span> <span class="title">Structure</span>.<span class="title">ByValue</span> </span>&#123;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="title">FactorResultWrapper</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">super</span>();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">protected</span> List&lt;String&gt; <span class="title">getFieldOrder</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> FIELDS_ORDER;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<ul>
<li>
<p><code>FusionResultWrapper</code></p>
<p>作为 C++ 中 结构体 <code>FusionResult</code>的封装类，定义同上。</p>
</li>
</ul>
<p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="keyword">import</span> com.sun.jna.Pointer;</div><div class="line"><span class="keyword">import</span> com.sun.jna.Structure;</div><div class="line"></div><div class="line"><span class="keyword">import</span> java.util.List;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FusionResultWrapper</span> <span class="keyword">extends</span> <span class="title">Structure</span> </span>&#123;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> List&lt;String&gt; FIELDS_ORDER = createFieldsOrder(<span class="string">"h1"</span>, <span class="string">"h1_size"</span>, <span class="string">"h2"</span>, <span class="string">"h2_size"</span>, <span class="string">"h3"</span>, <span class="string">"h3_size"</span>,</div><div class="line">            <span class="string">"h4"</span>, <span class="string">"h4_size"</span>, <span class="string">"qz1"</span>, <span class="string">"qz2"</span>, <span class="string">"qz3"</span>, <span class="string">"qz4"</span>, <span class="string">"m"</span>, <span class="string">"n"</span>);</div><div class="line">    <span class="keyword">public</span> Pointer h1;    <span class="comment">// 油色谱</span></div><div class="line">    <span class="keyword">public</span> <span class="keyword">int</span> h1_size;</div><div class="line">    <span class="keyword">public</span> Pointer h2;    <span class="comment">// 电气试验</span></div><div class="line">    <span class="keyword">public</span> <span class="keyword">int</span> h2_size;</div><div class="line">    <span class="keyword">public</span> Pointer h3;    <span class="comment">// 绝缘油</span></div><div class="line">    <span class="keyword">public</span> <span class="keyword">int</span> h3_size;</div><div class="line">    <span class="keyword">public</span> Pointer h4;    <span class="comment">// 其余项</span></div><div class="line">    <span class="keyword">public</span> <span class="keyword">int</span> h4_size;</div><div class="line">    <span class="keyword">public</span> <span class="keyword">float</span> qz1;    <span class="comment">// 油色谱权重</span></div><div class="line">    <span class="keyword">public</span> <span class="keyword">float</span> qz2;    <span class="comment">// 电气试验权重</span></div><div class="line">    <span class="keyword">public</span> <span class="keyword">float</span> qz3;    <span class="comment">// 绝缘油权重</span></div><div class="line">    <span class="keyword">public</span> <span class="keyword">float</span> qz4;    <span class="comment">// 其余项权重</span></div><div class="line">    <span class="keyword">public</span> <span class="keyword">float</span> m;    <span class="comment">// 证据融合参数</span></div><div class="line">    <span class="keyword">public</span> <span class="keyword">float</span> n;    <span class="comment">// 证据融合参数</span></div><div class="line"></div><div class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">ByReference</span> <span class="keyword">extends</span> <span class="title">FusionResultWrapper</span> <span class="keyword">implements</span> <span class="title">Structure</span>.<span class="title">ByReference</span> </span>&#123;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">ByValue</span> <span class="keyword">extends</span> <span class="title">FusionResultWrapper</span> <span class="keyword">implements</span> <span class="title">Structure</span>.<span class="title">ByValue</span> </span>&#123;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">protected</span> List&lt;String&gt; <span class="title">getFieldOrder</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> FIELDS_ORDER;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<ul>
<li>
<p><code>ImproveInputWrapper</code></p>
<p>作为 C++ 中 结构体 <code>ImproveInput</code>的封装类，就是基本类型映射。</p>
</li>
</ul>
<p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> com.sun.jna.Structure;</div><div class="line"></div><div class="line"><span class="keyword">import</span> java.util.List;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ImproveInputWrapper</span> <span class="keyword">extends</span> <span class="title">Structure</span> </span>&#123;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> List&lt;String&gt; FIELDS_ORDER = createFieldsOrder(<span class="string">"time"</span>, <span class="string">"value"</span>);</div><div class="line">    <span class="keyword">public</span> <span class="keyword">long</span> time;</div><div class="line">    <span class="keyword">public</span> <span class="keyword">float</span> value;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="title">ImproveInputWrapper</span><span class="params">()</span> </span>&#123;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">ByReference</span> <span class="keyword">extends</span> <span class="title">ImproveInputWrapper</span> <span class="keyword">implements</span> <span class="title">Structure</span>.<span class="title">ByReference</span> </span>&#123;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">protected</span> List&lt;String&gt; <span class="title">getFieldOrder</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> FIELDS_ORDER;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<ul>
<li>
<p><code>ImproveResultWrapper</code></p>
<p>作为 C++ 中 结构体<code>ImproveResult</code>的封装类</p>
</li>
</ul>
<p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> com.sun.jna.Pointer;</div><div class="line"><span class="keyword">import</span> com.sun.jna.Structure;</div><div class="line"></div><div class="line"><span class="keyword">import</span> java.util.List;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ImproveResultWrapper</span> <span class="keyword">extends</span> <span class="title">Structure</span> </span>&#123;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> List&lt;String&gt; FIELDS_ORDER = createFieldsOrder(<span class="string">"valid"</span>, <span class="string">"validPercent"</span>, <span class="string">"abnormalData"</span>, <span class="string">"abnormal_size"</span>, <span class="string">"optimizeData"</span>, <span class="string">"optimize_size"</span>);</div><div class="line"></div><div class="line">    <span class="keyword">public</span> <span class="keyword">int</span> valid;            <span class="comment">// 有效数据个数</span></div><div class="line">    <span class="keyword">public</span> <span class="keyword">float</span> validPercent;        <span class="comment">// 数据有效值占比</span></div><div class="line">    <span class="keyword">public</span> Pointer abnormalData;    <span class="comment">// 异常数据</span></div><div class="line">    <span class="keyword">public</span> <span class="keyword">int</span> abnormal_size;    <span class="comment">// 异常数据个数</span></div><div class="line">    <span class="keyword">public</span> Pointer optimizeData;    <span class="comment">// 优化后的数据</span></div><div class="line">    <span class="keyword">public</span> <span class="keyword">int</span> optimize_size;</div><div class="line"></div><div class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">ByReference</span> <span class="keyword">extends</span> <span class="title">ImproveResultWrapper</span> <span class="keyword">implements</span> <span class="title">Structure</span>.<span class="title">ByReference</span> </span>&#123;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">protected</span> List&lt;String&gt; <span class="title">getFieldOrder</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> FIELDS_ORDER;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<ul>
<li>
<p><code>ReviewResult</code></p>
<p>作为 C++ 中 结构体<code>ReviewResult</code>的封装类，此处包含多个结构体指针，需要通过 <code>ByReference</code>来声明，且需要分配内存。比如 <code>TransformerWrapper.ByReference indexScore</code>，需要通过 <code>toArray</code>分配内存</p>
</li>
</ul>
<p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> com.sun.jna.Memory;</div><div class="line"><span class="keyword">import</span> com.sun.jna.Native;</div><div class="line"><span class="keyword">import</span> com.sun.jna.Structure;</div><div class="line"></div><div class="line"><span class="keyword">import</span> java.util.List;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ReviewResult</span> <span class="keyword">extends</span> <span class="title">Structure</span> </span>&#123;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">int</span> STATE_SIZE = <span class="number">5</span>;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> List&lt;String&gt; FIELDS_ORDER = createFieldsOrder(<span class="string">"indexScore"</span>, <span class="string">"indexScore_size"</span>, <span class="string">"indexFusion"</span>, <span class="string">"factorFusion"</span>);</div><div class="line">    <span class="keyword">public</span> TransformerWrapper.ByReference indexScore;</div><div class="line">    <span class="keyword">public</span> <span class="keyword">int</span> indexScore_size;</div><div class="line">    <span class="keyword">public</span> FusionResultWrapper.ByReference indexFusion;</div><div class="line">    <span class="keyword">public</span> FactorResultWrapper.ByReference factorFusion;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="title">ReviewResult</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">super</span>();</div><div class="line">        <span class="keyword">if</span> (indexScore_size == <span class="number">0</span>)</div><div class="line">            indexScore_size = STATE_SIZE;</div><div class="line">        indexScore = <span class="keyword">new</span> TransformerWrapper.ByReference();</div><div class="line">        TransformerWrapper[] wrappers = (TransformerWrapper[]) indexScore.toArray(indexScore_size);</div><div class="line">        <span class="keyword">for</span> (TransformerWrapper wrapper : wrappers) &#123;</div><div class="line">            wrapper.h2Value = <span class="number">0f</span>;</div><div class="line">            wrapper.totalHydrocarbon = <span class="number">0f</span>;        <span class="comment">// 总烃</span></div><div class="line">            wrapper.c2h2Value = <span class="number">0f</span>;</div><div class="line">            wrapper.coValue = <span class="number">0f</span>;</div><div class="line">            wrapper.co2Value = <span class="number">0f</span>;</div><div class="line">            wrapper.dielectricLoss = <span class="number">0f</span>;        <span class="comment">// 介损</span></div><div class="line">            wrapper.dcResistance = <span class="number">0f</span>;        <span class="comment">//直阻</span></div><div class="line">            wrapper.absorptance = <span class="number">0f</span>;            <span class="comment">//吸收比</span></div><div class="line">            wrapper.polarizeFactor = <span class="number">0f</span>;        <span class="comment">// 极化系数</span></div><div class="line">            wrapper.electricCapacity = <span class="number">0f</span>;        <span class="comment">// 电容量</span></div><div class="line">            wrapper.moisture = <span class="number">0f</span>;            <span class="comment">// 微水</span></div><div class="line">            wrapper.breakdownVoltage = <span class="number">0f</span>;    <span class="comment">// 击穿电压</span></div><div class="line">            wrapper.oilDielectricLoss = <span class="number">0f</span>;    <span class="comment">// 油介损</span></div><div class="line">            wrapper.interfacialTension = <span class="number">0f</span>;    <span class="comment">//界面张力</span></div><div class="line">            wrapper.electricResistivity = <span class="number">0f</span>; <span class="comment">//电阻率</span></div><div class="line">            wrapper.runningLife = <span class="number">0</span>;        <span class="comment">// 运行年限</span></div><div class="line">            wrapper.ambientTemperature = <span class="number">0f</span>;    <span class="comment">// 环境温度</span></div><div class="line">            wrapper.jointTemperature = <span class="number">0f</span>;        <span class="comment">//接头温度</span></div><div class="line">            wrapper.oilTankTemperature = <span class="number">0f</span>;    <span class="comment">// 油箱温度</span></div><div class="line">        &#125;</div><div class="line">        indexFusion = <span class="keyword">new</span> FusionResultWrapper.ByReference();</div><div class="line">        indexFusion.h1 = <span class="keyword">new</span> Memory(STATE_SIZE * Native.getNativeSize(Float.TYPE));</div><div class="line">        indexFusion.h1_size = STATE_SIZE;</div><div class="line">        indexFusion.h2 = <span class="keyword">new</span> Memory(STATE_SIZE * Native.getNativeSize(Float.TYPE));</div><div class="line">        indexFusion.h2_size = STATE_SIZE;</div><div class="line">        indexFusion.h3 = <span class="keyword">new</span> Memory(STATE_SIZE * Native.getNativeSize(Float.TYPE));</div><div class="line">        indexFusion.h3_size = STATE_SIZE;</div><div class="line">        indexFusion.h4 = <span class="keyword">new</span> Memory(STATE_SIZE * Native.getNativeSize(Float.TYPE));</div><div class="line">        indexFusion.h4_size = STATE_SIZE;</div><div class="line">        factorFusion = <span class="keyword">new</span> FactorResultWrapper.ByReference();</div><div class="line">        factorFusion.state = <span class="keyword">new</span> Memory(STATE_SIZE * Native.getNativeSize(Float.TYPE));</div><div class="line">        factorFusion.state_size = STATE_SIZE;</div><div class="line">        factorFusion.comment = <span class="string">""</span>;</div><div class="line">        factorFusion.comment_len = <span class="number">0</span>;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">ByReference</span> <span class="keyword">extends</span> <span class="title">ReviewResult</span> <span class="keyword">implements</span> <span class="title">Structure</span>.<span class="title">ByReference</span> </span>&#123;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">protected</span> List&lt;String&gt; <span class="title">getFieldOrder</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> FIELDS_ORDER;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<ul>
<li>
<p><code>TransformerWrapper</code></p>
<p>作为 C++ 中 结构体<code>Transformer</code>的封装类</p>
</li>
</ul>
<p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> com.sun.jna.Structure;</div><div class="line"></div><div class="line"><span class="keyword">import</span> java.util.List;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TransformerWrapper</span> <span class="keyword">extends</span> <span class="title">Structure</span> </span>&#123;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> List&lt;String&gt; FIELDS_ORDER = createFieldsOrder(<span class="string">"h2Value"</span>, <span class="string">"totalHydrocarbon"</span>, <span class="string">"c2h2Value"</span>, <span class="string">"coValue"</span>, <span class="string">"co2Value"</span>, <span class="string">"dielectricLoss"</span>,</div><div class="line">            <span class="string">"dcResistance"</span>, <span class="string">"absorptance"</span>, <span class="string">"polarizeFactor"</span>, <span class="string">"electricCapacity"</span>, <span class="string">"moisture"</span>, <span class="string">"breakdownVoltage"</span>,</div><div class="line">            <span class="string">"oilDielectricLoss"</span>, <span class="string">"interfacialTension"</span>, <span class="string">"electricResistivity"</span>, <span class="string">"runningLife"</span>, <span class="string">"ambientTemperature"</span>,</div><div class="line">            <span class="string">"jointTemperature"</span>, <span class="string">"oilTankTemperature"</span>);</div><div class="line"></div><div class="line">    <span class="keyword">public</span> <span class="keyword">float</span> h2Value;</div><div class="line">    <span class="keyword">public</span> <span class="keyword">float</span> totalHydrocarbon;        <span class="comment">// 总烃</span></div><div class="line">    <span class="keyword">public</span> <span class="keyword">float</span> c2h2Value;</div><div class="line">    <span class="keyword">public</span> <span class="keyword">float</span> coValue;</div><div class="line">    <span class="keyword">public</span> <span class="keyword">float</span> co2Value;</div><div class="line">    <span class="keyword">public</span> <span class="keyword">float</span> dielectricLoss;        <span class="comment">// 介损</span></div><div class="line">    <span class="keyword">public</span> <span class="keyword">float</span> dcResistance;        <span class="comment">//直阻</span></div><div class="line">    <span class="keyword">public</span> <span class="keyword">float</span> absorptance;            <span class="comment">//吸收比</span></div><div class="line">    <span class="keyword">public</span> <span class="keyword">float</span> polarizeFactor;        <span class="comment">// 极化系数</span></div><div class="line">    <span class="keyword">public</span> <span class="keyword">float</span> electricCapacity;        <span class="comment">// 电容量</span></div><div class="line">    <span class="keyword">public</span> <span class="keyword">float</span> moisture;            <span class="comment">// 微水</span></div><div class="line">    <span class="keyword">public</span> <span class="keyword">float</span> breakdownVoltage;    <span class="comment">// 击穿电压</span></div><div class="line">    <span class="keyword">public</span> <span class="keyword">float</span> oilDielectricLoss;    <span class="comment">// 油介损</span></div><div class="line">    <span class="keyword">public</span> <span class="keyword">float</span> interfacialTension;    <span class="comment">//界面张力</span></div><div class="line">    <span class="keyword">public</span> <span class="keyword">float</span> electricResistivity; <span class="comment">//电阻率</span></div><div class="line">    <span class="keyword">public</span> <span class="keyword">short</span> runningLife;        <span class="comment">// 运行年限</span></div><div class="line">    <span class="keyword">public</span> <span class="keyword">float</span> ambientTemperature;    <span class="comment">// 环境温度</span></div><div class="line">    <span class="keyword">public</span> <span class="keyword">float</span> jointTemperature;        <span class="comment">//接头温度</span></div><div class="line">    <span class="keyword">public</span> <span class="keyword">float</span> oilTankTemperature;    <span class="comment">// 油箱温度</span></div><div class="line"></div><div class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">ByReference</span> <span class="keyword">extends</span> <span class="title">TransformerWrapper</span> <span class="keyword">implements</span> <span class="title">Structure</span>.<span class="title">ByReference</span> </span>&#123;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">ByValue</span> <span class="keyword">extends</span> <span class="title">TransformerWrapper</span> <span class="keyword">implements</span> <span class="title">Structure</span>.<span class="title">ByValue</span> </span>&#123;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="title">TransformerWrapper</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">super</span>();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">protected</span> List&lt;String&gt; <span class="title">getFieldOrder</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> FIELDS_ORDER;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<ul>
<li>
<p><code>CalculatorImpl</code></p>
<p>Java 接口的实现类，首先需要从 Jar 中解压 dll 到指定目录，然后通过此目录加载 dll。依赖关系为 Java 接口通过 JNA 加载<code>calculator.dll</code> ，而<code>calculator.dll</code>依赖 <code>pingjia.dll</code>和另外一个dll。</p>
<p>三个dll必须在同一目录下， JNA 只需要加载 <code>calculator.dll</code>。因为此处只是在 WIN32 平台执行，所以加载时，通过 <code>Native.loadLibrary</code> 加载的时候，在文件名前加了 <code>/</code>，否则 JNA 会在文件前增加平台相关的perfix导致加载失败。</p>
</li>
</ul>
<p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CalculatorImpl</span> <span class="keyword">implements</span> <span class="title">Calculator</span> </span>&#123;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> Log LOGGER = Logs.getLog(CalculatorImpl.class);</div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> CalculatorApi CALCULATOR_API;</div><div class="line">    </div><div class="line">    <span class="keyword">static</span> &#123;</div><div class="line">        <span class="keyword">try</span> &#123;</div><div class="line">            String current = System.getProperty(<span class="string">"user.dir"</span>);</div><div class="line">            File matlab = <span class="keyword">new</span> File(current, <span class="string">"matlab"</span>);</div><div class="line">            System.setProperty(<span class="string">"java.library.path"</span>, matlab.getPath());</div><div class="line">            System.setProperty(<span class="string">"jna.library.path"</span>, matlab.getPath());</div><div class="line">          	<span class="comment">// 从 Jar 包 resources 中解压 dll 到指定目录 </span></div><div class="line">          	<span class="comment">// Files.createDirIfNoExists(matlab);</span></div><div class="line">            <span class="comment">// Files.clearDir(matlab);</span></div><div class="line">         	</div><div class="line">           	<span class="comment">// 加载 dll 并映射成 Java 接口</span></div><div class="line">            CALCULATOR_API = Native.loadLibrary(<span class="string">"/calculator.dll"</span>, CalculatorApi.class);</div><div class="line">          	<span class="comment">// 初始化dll (C++ 实现)</span></div><div class="line">            <span class="keyword">int</span> ret = CALCULATOR_API.init();</div><div class="line">            LOGGER.debugf(<span class="string">"init calculator (%d)"</span>, ret);</div><div class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</div><div class="line">            LOGGER.error(e.getMessage(), e);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h4>使用</h4>
<ul>
<li><code>improveData</code> 数据清洗，需要根据Java Wrapper的接口，组织数据，内存都在 Java 端分配，由 Java 端负责回收。<code>Pointer</code>的内存分配，通过 <code>new Memory(size)</code>来分配。</li>
</ul>
<p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">private</span> TwoTuple&lt;String, CalculationResult&gt; <span class="title">improveData</span><span class="params">(String label, List&lt;TwoTuple&lt;String, Float&gt;&gt; values)</span></span></div><div class="line"><span class="function">            <span class="keyword">throws</span> CalculatorException </span>&#123;</div><div class="line">        ImproveInputWrapper.ByReference inputsRef = <span class="keyword">new</span> ImproveInputWrapper.ByReference();</div><div class="line">        <span class="keyword">final</span> <span class="keyword">int</span> valueSize = values.size();</div><div class="line">        ImproveInputWrapper[] inputs = (ImproveInputWrapper[]) inputsRef.toArray(valueSize);</div><div class="line">        LOGGER.debug(label + <span class="string">" inputs: "</span>);</div><div class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; valueSize; i++) &#123;</div><div class="line">            <span class="keyword">try</span> &#123;</div><div class="line">                TwoTuple&lt;String, Float&gt; entry = values.get(i);</div><div class="line">                Date date = FORMATTER.parse(entry.getKey());</div><div class="line">                inputs[i].time = date.getTime();</div><div class="line">                inputs[i].value = entry.getValue();</div><div class="line">                LOGGER.debugf(<span class="string">"%d: %s(%d) -&gt; %f"</span>, i, entry.getKey(), inputs[i].time, inputs[i].value);</div><div class="line">            &#125; <span class="keyword">catch</span> (ParseException e) &#123;</div><div class="line">                LOGGER.error(e.getMessage(), e);</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        ImproveResultWrapper.ByReference impResultRef = <span class="keyword">new</span> ImproveResultWrapper.ByReference();</div><div class="line">        impResultRef.abnormalData = <span class="keyword">new</span> Memory(valueSize * Native.getNativeSize(Float.TYPE));</div><div class="line">        impResultRef.abnormalData.setFloat(<span class="number">0</span>, <span class="number">0</span>);</div><div class="line">        impResultRef.optimizeData = <span class="keyword">new</span> Memory(valueSize * Native.getNativeSize(Float.TYPE));</div><div class="line">        impResultRef.optimizeData.setFloat(<span class="number">0</span>, <span class="number">0</span>);</div><div class="line">        impResultRef.abnormal_size = <span class="number">0</span>;</div><div class="line">        impResultRef.validPercent = <span class="number">0</span>;</div><div class="line">        impResultRef.optimize_size = <span class="number">0</span>;</div><div class="line"></div><div class="line">        <span class="keyword">int</span> flag = CALCULATOR_API.improve_data(inputsRef, inputs.length, impResultRef);</div><div class="line">        LOGGER.debug(<span class="string">"improve_data flag: "</span> + flag);</div><div class="line">        CalculationResult.CalculationResultBuilder builder = CalculationResult.CalculationResultBuilder</div><div class="line">                .aCalculationResult().withOriginalData(values);</div><div class="line">        <span class="keyword">if</span> (flag == <span class="number">0</span>) &#123;</div><div class="line"> builder.withValidPercent(impResultRef.validPercent).withValidSize(impResultRef.valid);</div><div class="line">            <span class="keyword">int</span> abnormalSize = impResultRef.abnormal_size;</div><div class="line">            LOGGER.debug(<span class="string">"abnormalSize: "</span> + abnormalSize);</div><div class="line">            <span class="keyword">if</span> (abnormalSize &gt; <span class="number">0</span>) &#123;</div><div class="line">                <span class="keyword">float</span>[] abnormalValues = impResultRef.abnormalData.getFloatArray(<span class="number">0</span>, abnormalSize);</div><div class="line">                builder.withAbnormalData(Collections.unmodifiableList(Lang.array2list(abnormalValues, Float.class)));</div><div class="line">            &#125; <span class="keyword">else</span> &#123;</div><div class="line">                builder.withAbnormalData(Collections.&lt;Float&gt;emptyList());</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">int</span> optimizeSize = impResultRef.optimize_size;</div><div class="line">            LOGGER.debug(<span class="string">"optimizeSize: "</span> + optimizeSize);</div><div class="line">            <span class="keyword">if</span> (optimizeSize &gt; <span class="number">0</span>) &#123;</div><div class="line">                <span class="keyword">float</span>[] optimizeValues = impResultRef.optimizeData.getFloatArray(<span class="number">0</span>, optimizeSize);</div><div class="line">                builder.withOptimizeData(Collections.unmodifiableList(Lang.array2list(optimizeValues, Float.class)));</div><div class="line">            &#125; <span class="keyword">else</span> &#123;</div><div class="line">                builder.withOptimizeData(Collections.&lt;Float&gt;emptyList());</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        CalculationResult result = builder.build();</div><div class="line">        LOGGER.debug(result);</div><div class="line"></div><div class="line">        <span class="keyword">return</span> <span class="keyword">new</span> TwoTuple&lt;&gt;(label, result);</div><div class="line">    &#125;</div></pre></td></tr></table></figure></p>
<ul>
<li><code>reviewTransformer</code> 机组状态评价，获取 <code>float *</code>的数据时候的，需要通过 <code>getFloatArray</code> 获取数据。</li>
</ul>
<p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">private</span> TransformerResult <span class="title">reviewTransformer</span><span class="params">(Map&lt;String, Float&gt; values)</span> <span class="keyword">throws</span> CalculatorException </span>&#123;</div><div class="line">        TransformerWrapper.ByReference transformerRef = <span class="keyword">new</span> TransformerWrapper.ByReference();</div><div class="line">        setTransformer(transformerRef, values);</div><div class="line"></div><div class="line">        ReviewResult.ByReference reviewResultRef = <span class="keyword">new</span> ReviewResult.ByReference();</div><div class="line">        <span class="keyword">int</span> flag = CALCULATOR_API.review_transformer(transformerRef, reviewResultRef);</div><div class="line">        LOGGER.debugf(<span class="string">"review_transformer flag: %d"</span>, flag);</div><div class="line"></div><div class="line">        TransformerResult result = <span class="keyword">new</span> TransformerResult();</div><div class="line">        <span class="keyword">if</span> (flag == <span class="number">0</span>) &#123;</div><div class="line">            <span class="keyword">float</span>[] states = reviewResultRef.factorFusion.state.getFloatArray(<span class="number">0</span>,</div><div class="line">                    reviewResultRef.factorFusion.state_size);</div><div class="line">            result.setState(states).setComment(reviewResultRef.factorFusion.comment);</div><div class="line"></div><div class="line">            <span class="keyword">float</span>[] h1 = reviewResultRef.indexFusion.h1.getFloatArray(<span class="number">0</span>, reviewResultRef.indexFusion.h1_size);</div><div class="line">            result.setH1(h1);</div><div class="line">            <span class="keyword">float</span>[] h2 = reviewResultRef.indexFusion.h2.getFloatArray(<span class="number">0</span>, reviewResultRef.indexFusion.h2_size);</div><div class="line">            result.setH2(h2);</div><div class="line">            <span class="keyword">float</span>[] h3 = reviewResultRef.indexFusion.h3.getFloatArray(<span class="number">0</span>, reviewResultRef.indexFusion.h3_size);</div><div class="line">            result.setH3(h3);</div><div class="line">            <span class="keyword">float</span>[] h4 = reviewResultRef.indexFusion.h4.getFloatArray(<span class="number">0</span>, reviewResultRef.indexFusion.h4_size);</div><div class="line">            result.setH4(h4);</div><div class="line">            result.setQz1(reviewResultRef.indexFusion.qz1).setQz2(reviewResultRef.indexFusion.qz2)</div><div class="line">                    .setQz3(reviewResultRef.indexFusion.qz3).setQz4(reviewResultRef.indexFusion.qz4)</div><div class="line">                    .setM(reviewResultRef.indexFusion.m).setN(reviewResultRef.indexFusion.n);</div><div class="line"></div><div class="line">            TransformerWrapper[] wrappers = (TransformerWrapper[]) reviewResultRef.indexScore.toArray(reviewResultRef.indexScore_size);</div><div class="line">            Transformer[] transformers = transformerWrapperToTransformer(wrappers);</div><div class="line">            result.setTransformers(transformers);</div><div class="line">            LOGGER.debug(<span class="string">"transfer review result."</span>);</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="keyword">return</span> result;</div><div class="line">    &#125;</div></pre></td></tr></table></figure></p>
<h3>小结</h3>
<ul>
<li>优点
<ul>
<li>Java 端不需要编写C/C++代码</li>
</ul>
</li>
<li>缺点
<ul>
<li>需要编写与 C/C++ 对应的结构体映射，碰到复杂的结构体工作量不小</li>
<li>结构体指针/数据通过 <code>toArray</code>获取数据时，效率较低，尤其时数据量比较大的时候</li>
<li>如果时C/C++端分配的内存，Java 端管理不了，如果C/C++不提供显式回收接口，会导致内存泄露</li>
<li>代码不规范，破坏了OO封装性，比如 field 必须要 Public</li>
<li>需要实现 <code>Structure.ByReference</code>接口，这些明显都可以通过注解来解决</li>
</ul>
</li>
</ul>
<p>---EOF---</p>
]]></content>
    
    <summary type="html">
    
      &lt;h3&gt;缘起&lt;/h3&gt;
&lt;p&gt;项目中调用了第三方一个 Matlab 实现的数据清洗和机组状态评价的算法，但是对方不会除 Matlab 外的其他语言，最后只用 Matlab 生成了一个 dll/lib 文件。由于对方提供的接口质量真心不好，而且对方也无力修改。最终方案只好由我方在其
    
    </summary>
    
      <category term="Programming" scheme="https://gythialy.github.io/categories/Programming/"/>
    
    
      <category term="C" scheme="https://gythialy.github.io/tags/C/"/>
    
      <category term="Java" scheme="https://gythialy.github.io/tags/Java/"/>
    
      <category term="JNA" scheme="https://gythialy.github.io/tags/JNA/"/>
    
  </entry>
  
  <entry>
    <title>GPG 导入导出 Key</title>
    <link href="https://gythialy.github.io/Howto-import-export-gpg-key/"/>
    <id>https://gythialy.github.io/Howto-import-export-gpg-key/</id>
    <published>2017-03-22T07:26:05.000Z</published>
    <updated>2017-08-07T15:55:12.427Z</updated>
    
    <content type="html"><![CDATA[<p>在多台电脑上操作的时候经常会涉及到 GPG 公钥/私钥的导入导出，比方说 GitHub 支持 GPG 加密 Commit，在多台电脑上使用相同的 Key 可以省去很多配置工作。</p>
<h2>列出本地的所有 Key</h2>
<p>执行 <code>gpg --list-keys</code> 列出本地所有的密钥</p>
<p>输出结果类似</p>
<p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"> $ gpg --list-keys /home/$USER/.gnupg/pubring.gpg </div><div class="line"> ----------------------------------- </div><div class="line">pub   4 096R/375A500B 2017-03-22 [有效至：2018-03-22] </div><div class="line">uid                  Goren G (Git) &lt;gythialy.koo+git@gmail.com&gt; </div><div class="line">sub   4096R/ADB9D36C 2017-03-22 [有效至：2018-03-22]</div></pre></td></tr></table></figure></p>
<h2>导出</h2>
<p>根据 <code>375A500B</code> 导出相应的公钥和私钥</p>
<p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">gpg --output mygpgkey_pub.gpg --armor --export 375A500B</div><div class="line">gpg --output mygpgkey_sec.gpg --armor --export-secret-key 375A500B</div></pre></td></tr></table></figure></p>
<h2>导入</h2>
<p>导入刚导入的文件</p>
<p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">gpg --import ~/mygpgkey_pub.gpg</div><div class="line">gpg --allow-secret-key-import --import ~/mygpgkey_sec.gpg</div><div class="line">`</div></pre></td></tr></table></figure></p>
<p>---EOF---</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在多台电脑上操作的时候经常会涉及到 GPG 公钥/私钥的导入导出，比方说 GitHub 支持 GPG 加密 Commit，在多台电脑上使用相同的 Key 可以省去很多配置工作。&lt;/p&gt;
&lt;h2&gt;列出本地的所有 Key&lt;/h2&gt;
&lt;p&gt;执行 &lt;code&gt;gpg --list-
    
    </summary>
    
      <category term="Notes" scheme="https://gythialy.github.io/categories/Notes/"/>
    
    
      <category term="gpg" scheme="https://gythialy.github.io/tags/gpg/"/>
    
  </entry>
  
  <entry>
    <title>babun 配置</title>
    <link href="https://gythialy.github.io/babun-config/"/>
    <id>https://gythialy.github.io/babun-config/</id>
    <published>2016-05-04T01:09:36.000Z</published>
    <updated>2017-08-07T15:55:12.427Z</updated>
    
    <content type="html"><![CDATA[<h2>介绍</h2>
<p>babun 号称是开箱即用的，本质是上就是 cygwin 加上了一些预设的配置。特性如下:</p>
<ul>
<li>Pre-configured Cygwin with a lot of addons</li>
<li>Silent command-line installer, no admin rights required</li>
<li>pact - advanced package manager (like apt-get or yum)</li>
<li>xTerm-256 compatible console</li>
<li>HTTP(s) proxying support</li>
<li>Plugin-oriented architecture</li>
<li>Pre-configured git and shell</li>
<li>Integrated oh-my-zsh</li>
<li>Auto update feature</li>
<li>&quot;Open Babun Here&quot; context menu entry</li>
</ul>
<h2>安装</h2>
<p>下载<a href="http://projects.reficio.org/babun/download" target="_blank" rel="external">安装包</a>解压缩到任意目录后，运行 <code>install.bat</code>。也可以使用 <code>/t %target_folder%</code> 指定安装目录。</p>
<h2>配置</h2>
<p>既然是开箱即用，对大多数人来说当然不需要太多配置，一般需要以下两个命令：</p>
<ul>
<li><code>babun check</code> 用于判断环境是否正确</li>
<li><code>babun update</code> 用于判断是否有新的更新包</li>
</ul>
<h2>包管理</h2>
<p>babun 自带了叫做 <code>pact</code> 的包管理，修改自 <code>apt-cyg</code>, 但比较弱，用法如下：</p>
<p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">&#123; ~ &#125;  » pact --help</div><div class="line">pact: Installs and removes Cygwin packages.</div><div class="line"></div><div class="line">Usage:</div><div class="line">  "pact install &lt;package names&gt;" to install given packages</div><div class="line">  "pact remove &lt;package names&gt;" to remove given packages</div><div class="line">  "pact update &lt;package names&gt;" to update given packages</div><div class="line">  "pact show" to show installed packages</div><div class="line">  "pact find &lt;patterns&gt;" to find packages matching patterns</div><div class="line">  "pact describe &lt;patterns&gt;" to describe packages matching patterns</div><div class="line">  "pact packageof &lt;commands or files&gt;" to locate parent packages</div><div class="line">  "pact invalidate" to invalidate pact caches (setup.ini, etc.)</div><div class="line">Options:</div><div class="line">  --mirror, -m &lt;url&gt; : set mirror</div><div class="line">  --invalidate, -i       : invalidates pact caches (setup.ini, etc.)</div><div class="line">  --force, -f : force the execution</div><div class="line">  --help</div><div class="line">  --version</div></pre></td></tr></table></figure></p>
<h2>和 Windows 共享配置</h2>
<ol>
<li>添加环境变量 <code>HOME</code>，值为 Windows 的用户目录 <code>C:\Users\%USERNAME%</code></li>
<li>启动 babun，执行 <code>babun install</code>，重启 babun</li>
</ol>
<blockquote>
<p>%USERNAME% 不能包含空格。如果用户名已经有空格，参考<a href="https://cygwin.com/faq.html#faq.setup.name-with-space" target="_blank" rel="external">这里</a>解决。</p>
</blockquote>
<h2>代理设置</h2>
<p>只需要取消 <code>.babunrc</code> 中的注释 (<code>%USERPROFILE%\.babunrc</code>)</p>
<p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"># Uncomment this lines to set up your proxy</div><div class="line">export http_proxy=user:password@server:port</div><div class="line">export https_proxy=$http_proxy</div><div class="line">export ftp_proxy=$http_proxy</div><div class="line">export no_proxy=localhost</div></pre></td></tr></table></figure></p>
<h2>镜像</h2>
<p>修改 <code>~/.pact/pact.repo</code> 中的 <code>PACT_REPO</code> 字段</p>
<p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">#PACT_REPO=http://mirrors.kernel.org/sourceware/cygwin/</div><div class="line">PACT_REPO=http://mirrors.neusoft.edu.cn/cygwin/</div><div class="line"></div><div class="line"># POPULAR HTTP REPOSITORIES</div><div class="line"># http://mirror.switch.ch/ftp/mirror/cygwin/</div><div class="line"></div><div class="line"># POPULAR FTP REPOSITORIES</div><div class="line"># ftp://mirror.switch.ch/mirror/cygwin/</div><div class="line"># ftp://ftp.inf.tu-dresden.de/software/windows/cygwin32/</div><div class="line"># ftp://mirrors.kernel.org/sourceware/cygwin/</div><div class="line"># ftp://gd.tuwien.ac.at/gnu/cygwin/</div><div class="line"># ftp://ftp.iij.ad.jp/pub/cygwin/</div><div class="line"># ftp://mirror.cpsc.ucalgary.ca/cygwin.com/</div><div class="line"></div><div class="line"># FULL LIST</div><div class="line"># http://cygwin.com/mirrors.html</div></pre></td></tr></table></figure></p>
<h2>常用开发环境配置</h2>
<h3>Python</h3>
<p>babun 自带的 Python2 并没有安装 pip，需要手动安装</p>
<p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">pact install python-setuptools python-ming</div><div class="line">pact install libxml2-devel libxslt-devel libyaml-devel</div><div class="line">curl -skS https://bootstrap.pypa.io/get-pip.py | python</div></pre></td></tr></table></figure></p>
<h3>Ruby</h3>
<p>执行 <code>pact install ruby</code></p>
<blockquote>
<p>如果 <code>ruby -v</code> 不能返回版本，执行 <code>update.bat</code> 更新 cygwin 的版本。via <a href="https://github.com/babun/babun/issues/483" target="_blank" rel="external">Issue #483</a></p>
</blockquote>
<h2>FAQ</h2>
<ul>
<li>
<p>compdef: unknown command or service: git
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ compinit</div><div class="line">$ cp .zcompdump .zcompdump-$HOSTNAME-$ZSH_VERSION</div></pre></td></tr></table></figure></p>
</li>
<li>
<p>删除右键中的 <code>Open Babun here</code><br>
执行 <code>babun shell-here remove</code></p>
</li>
<li>
<p>与 ConEmu 集成<br>
<code>%userprofile%\.babun\cygwin\bin\mintty.exe /bin/env CHERE_INVOKING=1 /bin/zsh.exe</code>
<img src="/uploads/conemu_1.png" alt="ConEmu Settings"></p>
</li>
<li>
<p>X64<br>
官方对于 64 位的<a href="https://github.com/babun/babun/wiki/64-bit" target="_blank" rel="external">解释</a>。懒人也可以直接使用这个 <a href="https://github.com/babun/babun/pull/545" target="_blank" rel="external">PR</a> 编译的<a href="https://people.mozilla.org/%7Enchen/babun/babun-1.2.1-x86_64-dist.zip" target="_blank" rel="external">分发包</a>。有兴趣的也可以通过我合并的 <a href="https://github.com/gythialy/babun/tree/support-64-bit" target="_blank" rel="external">x64 分支</a> 自行构建。</p>
</li>
</ul>
<h2>总结</h2>
<p>总的来说，babun 比 <a href="msys2-config">MSYS2</a> 慢，包也不多，稳定性/兼容性貌似好一点。</p>
<p>最终配置效果：</p>
<p><img src="/uploads/babun.png" alt="babun"></p>
<p>---EOF---</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2&gt;介绍&lt;/h2&gt;
&lt;p&gt;babun 号称是开箱即用的，本质是上就是 cygwin 加上了一些预设的配置。特性如下:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Pre-configured Cygwin with a lot of addons&lt;/li&gt;
&lt;li&gt;Silent command
    
    </summary>
    
      <category term="Notes" scheme="https://gythialy.github.io/categories/Notes/"/>
    
    
      <category term="babun" scheme="https://gythialy.github.io/tags/babun/"/>
    
  </entry>
  
  <entry>
    <title>Jetty 配置 Log4J</title>
    <link href="https://gythialy.github.io/jetty-log4j-conf/"/>
    <id>https://gythialy.github.io/jetty-log4j-conf/</id>
    <published>2016-03-28T05:15:48.000Z</published>
    <updated>2017-08-07T15:55:12.427Z</updated>
    
    <content type="html"><![CDATA[<h2>缘起</h2>
<p>我们一台很老的装置中用了 Jetty v7.1.6，由于种种原因，不能升级新版本。某次由于一个 bug 导致一直写日志，最后把硬盘给写爆了，所以用 Log4J 记录日志，方便控制日志大小等。</p>
<blockquote>
<p>注：在 Jetty 最新的版本中，配置 Log4J 并不需要如此。</p>
</blockquote>
<h2>配置</h2>
<ol>
<li>
<p>下载 Log4J</p>
<ul>
<li>log4j-1.2.17.jar</li>
<li>slf4j-api-1.7.9.jar</li>
<li>slf4j-log4j12-1.7.9.jar</li>
</ul>
</li>
<li>
<p>复制 jar 包到 Jetty 目录中 <code>lib/ext</code> 文件夹中
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">-rwxr-xr-x 1 root root      0 Jul 16  2010 .donotdelete</div><div class="line">-rw-r--r-- 1 root root 489884 Nov 19 13:06 log4j-1.2.17.jar</div><div class="line">-rw-r--r-- 1 root root  32121 Nov 19 13:09 slf4j-api-1.7.9.jar</div><div class="line">-rw-r--r-- 1 root root   8867 Nov 19 16:55 slf4j-log4j12-1.7.9.jar</div></pre></td></tr></table></figure></p>
</li>
<li>
<p>在 Jetty 目录中 resources 文件夹中新建 <code>log4j.properties</code></p>
<p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"># Basic Log4j Configuration with STDOUT and File logging</div><div class="line">log4j.rootLogger=DEBUG, filer</div><div class="line"></div><div class="line">log4j.appender.stdout=org.apache.log4j.ConsoleAppender</div><div class="line">log4j.appender.stdout.Target=System.out</div><div class="line">log4j.appender.stdout.layout=org.apache.log4j.PatternLayout</div><div class="line">log4j.appender.stdout.layout.ConversionPattern=%d&#123;ABSOLUTE&#125; %5p %c&#123;1&#125;:%L - %m%n</div><div class="line"></div><div class="line">log4j.appender.filer=org.apache.log4j.RollingFileAppender</div><div class="line">log4j.appender.filer.layout=org.apache.log4j.PatternLayout</div><div class="line">log4j.appender.filer.layout.ConversionPattern=%d&#123;ABSOLUTE&#125; %5p %c&#123;1&#125;:%L - %m%n</div><div class="line">log4j.appender.filer.File=$&#123;jetty.home&#125;/logs/jetty.log</div><div class="line">log4j.appender.filer.MaxFileSize=1MB</div><div class="line">log4j.appender.filer.MaxBackupIndex=20</div></pre></td></tr></table></figure></p>
<blockquote>
<p>为了测试日志，配置设置的日志打印级别为DEBUG，单个文件大小为 1M，实际使用中根据具体使用场景调整。</p>
</blockquote>
</li>
<li>
<p>修改 <code>start.ini</code>，OPTIONS 中 <code>ext</code> 必须放在 <code>resources</code> 前面</p>
<p><figure class="highlight ini"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#===========================================================</span></div><div class="line"><span class="comment"># Start classpath OPTIONS.</span></div><div class="line"><span class="comment"># These control what classes are on the classpath</span></div><div class="line"><span class="comment"># for a full listing do</span></div><div class="line"><span class="comment">#   java -jar start.jar --list-options</span></div><div class="line"><span class="comment">#-----------------------------------------------------------</span></div><div class="line"><span class="attr">OPTIONS</span>=Server,jsp,jmx,websocket,ext,resources</div><div class="line"><span class="comment">#-----------------------------------------------------------</span></div></pre></td></tr></table></figure></p>
<blockquote>
<p>注：如需手动设置 JVM 内存配置，需要添加 <code>--exec</code>。这样就会有一个 java 进程常在。</p>
</blockquote>
</li>
<li>
<p>创建启动脚本，原理很简单，就是设置 <code>JAVA_HOME</code> 和 <code>JETTY_HOME</code> 两个环境变量，然后调用 Jetty 自身的脚本。如果已经设置全局的环境变量，此步可省略</p>
<p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#!/bin/sh</span></div><div class="line"></div><div class="line"><span class="built_in">export</span> JAVA_HOME=/usr/java/jdk</div><div class="line"><span class="built_in">export</span> JETTY_HOME=/home/data/jetty</div><div class="line"></div><div class="line"><span class="built_in">cd</span> <span class="variable">$JETTY_HOME</span>/bin</div><div class="line"><span class="built_in">pwd</span></div><div class="line"><span class="keyword">case</span> <span class="string">"<span class="variable">$1</span>"</span> <span class="keyword">in</span></div><div class="line">	start)</div><div class="line">		./jetty.sh start</div><div class="line">    		;;</div><div class="line">  	stop)</div><div class="line">		./jetty.sh stop</div><div class="line">    		;;</div><div class="line">	restart)</div><div class="line">   		./jetty.sh restart</div><div class="line">		;;</div><div class="line">	*)</div><div class="line">		<span class="built_in">echo</span> <span class="string">"Usage: <span class="variable">$0</span> <span class="variable">$1</span> &#123;start|stop|restart&#125;"</span></div><div class="line">		;;</div><div class="line"></div><div class="line"><span class="keyword">esac</span></div><div class="line"><span class="built_in">exit</span> 0</div></pre></td></tr></table></figure></p>
<blockquote>
<p>脚本中 <code>JAVA_HOME</code> 和 <code>JETTY_HOME</code> 是必须的。</p>
</blockquote>
</li>
</ol>
<h2>效果</h2>
<p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line">-rw-r--r-- 1 root root   27995 Nov 30 14:51 2015_11_27.stderrout.log</div><div class="line">-rw-r--r-- 1 root root    8060 Nov 30 14:51 EA0104-0.log</div><div class="line">-rw-r--r-- 1 root root  968686 Nov 30 14:52 jetty.log</div><div class="line">-rw-r--r-- 1 root root 1050948 Nov 27 15:57 jetty.log.1</div><div class="line">-rw-r--r-- 1 root root 1048812 Nov 27 15:52 jetty.log.10</div><div class="line">-rw-r--r-- 1 root root 1050923 Nov 27 15:52 jetty.log.11</div><div class="line">-rw-r--r-- 1 root root 1051665 Nov 27 15:49 jetty.log.12</div><div class="line">-rw-r--r-- 1 root root 1050713 Nov 27 15:47 jetty.log.13</div><div class="line">-rw-r--r-- 1 root root 1051495 Nov 27 15:47 jetty.log.14</div><div class="line">-rw-r--r-- 1 root root 1052634 Nov 27 15:47 jetty.log.15</div><div class="line">-rw-r--r-- 1 root root 1052521 Nov 27 15:29 jetty.log.16</div><div class="line">-rw-r--r-- 1 root root 1049512 Nov 27 15:29 jetty.log.17</div><div class="line">-rw-r--r-- 1 root root 1051501 Nov 27 15:29 jetty.log.18</div><div class="line">-rw-r--r-- 1 root root 1049831 Nov 27 15:56 jetty.log.2</div><div class="line">-rw-r--r-- 1 root root 1051016 Nov 27 15:56 jetty.log.3</div><div class="line">-rw-r--r-- 1 root root 1049532 Nov 27 15:56 jetty.log.4</div><div class="line">-rw-r--r-- 1 root root 1052064 Nov 27 15:56 jetty.log.5</div><div class="line">-rw-r--r-- 1 root root 1049274 Nov 27 15:56 jetty.log.6</div><div class="line">-rw-r--r-- 1 root root 1050903 Nov 27 15:56 jetty.log.7</div><div class="line">-rw-r--r-- 1 root root 1051740 Nov 27 15:52 jetty.log.8</div><div class="line">-rw-r--r-- 1 root root 1052915 Nov 27 15:52 jetty.log.9</div><div class="line">-rw-r--r-- 1 root root      55 Nov 27 15:52 start.log</div></pre></td></tr></table></figure></p>
<blockquote>
<p>start.log 是 start.jar 创建的，会根据 <code>etc/jetty-logging.xml</code> 中配置决定是否从定向内容。</p>
</blockquote>
<p>---EOF---</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2&gt;缘起&lt;/h2&gt;
&lt;p&gt;我们一台很老的装置中用了 Jetty v7.1.6，由于种种原因，不能升级新版本。某次由于一个 bug 导致一直写日志，最后把硬盘给写爆了，所以用 Log4J 记录日志，方便控制日志大小等。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;注：在 Jetty
    
    </summary>
    
      <category term="Notes" scheme="https://gythialy.github.io/categories/Notes/"/>
    
    
      <category term="Jetty" scheme="https://gythialy.github.io/tags/Jetty/"/>
    
      <category term="Log4J" scheme="https://gythialy.github.io/tags/Log4J/"/>
    
  </entry>
  
  <entry>
    <title>手动下载 XCode 文档和模拟器</title>
    <link href="https://gythialy.github.io/download-xcode-documentation-sets-manually/"/>
    <id>https://gythialy.github.io/download-xcode-documentation-sets-manually/</id>
    <published>2016-03-26T15:04:45.000Z</published>
    <updated>2017-08-07T15:55:12.427Z</updated>
    
    <content type="html"><![CDATA[<h2>缘起</h2>
<p>由于众所周知的原因，也就是 Apple 的云真的很烂，App Store 还能通过 DNS 等手段加速更新。对于 XCode 简直就是噩梦，挂不挂都是一个样子，非常慢。不幸中之大幸，虽然 XCode 本身下载很慢，但是可以手动下载好之后，通过 XCode 安装。</p>
<h2>文档</h2>
<p>手动下载文档可以通过以下几步解决，via <a href="https://stackoverflow.com/questions/1131119/download-xcode-documentation-sets-manually" target="_blank" rel="external">stackoverflow</a>。</p>
<ol>
<li>
<p>通过这个<a href="https://developer.apple.com/library/downloads/docset-index.dvtdownloadableindex" target="_blank" rel="external">地址</a>找到需要下载的文件的路径
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div></pre></td><td class="code"><pre><div class="line"><span class="comment">&lt;!-- START OS X doc set --&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">dict</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">key</span>&gt;</span>fileSize<span class="tag">&lt;/<span class="name">key</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">integer</span>&gt;</span>931959772<span class="tag">&lt;/<span class="name">integer</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">key</span>&gt;</span>identifier<span class="tag">&lt;/<span class="name">key</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">string</span>&gt;</span>com.apple.adc.documentation.OSX<span class="tag">&lt;/<span class="name">string</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">key</span>&gt;</span>name<span class="tag">&lt;/<span class="name">key</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">string</span>&gt;</span>OS X 10.11.4 Documentation<span class="tag">&lt;/<span class="name">string</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">key</span>&gt;</span>source<span class="tag">&lt;/<span class="name">key</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">string</span>&gt;</span>https://devimages.apple.com.edgekey.net/docsets/20160321/031-52211-A.dmg<span class="tag">&lt;/<span class="name">string</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">key</span>&gt;</span>userInfo<span class="tag">&lt;/<span class="name">key</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">dict</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">key</span>&gt;</span>ActivationPredicate<span class="tag">&lt;/<span class="name">key</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">string</span>&gt;</span>$XCODE_VERSION &amp;gt;= '7.3'<span class="tag">&lt;/<span class="name">string</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">key</span>&gt;</span>Category<span class="tag">&lt;/<span class="name">key</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">string</span>&gt;</span>Documentation<span class="tag">&lt;/<span class="name">string</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">key</span>&gt;</span>IconType<span class="tag">&lt;/<span class="name">key</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">string</span>&gt;</span>IDEDownloadablesTypeDocSet<span class="tag">&lt;/<span class="name">string</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">key</span>&gt;</span>InstallPrefix<span class="tag">&lt;/<span class="name">key</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">string</span>&gt;</span>$(HOME)/Library/Developer/Shared/Documentation/DocSets<span class="tag">&lt;/<span class="name">string</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">key</span>&gt;</span>InstalledIfAllReceiptsArePresentOrNewer<span class="tag">&lt;/<span class="name">key</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">dict</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">key</span>&gt;</span>com.apple.pkg.10.9.OSXDocset<span class="tag">&lt;/<span class="name">key</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">string</span>&gt;</span>10.9.0.0.1.1458364023<span class="tag">&lt;/<span class="name">string</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">dict</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">key</span>&gt;</span>RequiresADCAuthentication<span class="tag">&lt;/<span class="name">key</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">false</span>/&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">key</span>&gt;</span>Summary<span class="tag">&lt;/<span class="name">key</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">string</span>&gt;</span>My description of content<span class="tag">&lt;/<span class="name">string</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">dict</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">key</span>&gt;</span>version<span class="tag">&lt;/<span class="name">key</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">string</span>&gt;</span>1014.5<span class="tag">&lt;/<span class="name">string</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">dict</span>&gt;</span></div><div class="line"><span class="comment">&lt;!-- END OS X doc set --&gt;</span></div></pre></td></tr></table></figure></p>
<p>下载 <code>source</code> 节点对应的内容，在这个示例中也就是<a href="https://devimages.apple.com.edgekey.net/docsets/20160321/031-52211-A.dmg" target="_blank" rel="external">这个</a>，可以通过第三方的下载工具，比如 asia2 下载。</p>
</li>
<li>
<p>按照 <code>identifier string</code> + <code>-</code> + <code>version string</code> + <code>.dmg</code> 的格式重命名文件，在这个示例中也就是 <code>com.apple.adc.documentation.OSX-1014.5.dmg</code></p>
</li>
<li>
<p>把重命名后的文件放到 <code>~/Library/Caches/com.apple.dt.Xcode/Downloads/</code> 中，如果没有 <code>Downloads</code> 文件夹就创建一个，
如果 <code>Downloads</code> 中有后缀为 <code>dvtdownloadableindex</code> 的文件，全部删除</p>
</li>
<li>
<p>删除 <code>~/Library/Developer/Shared/Documentation/DocSets</code> 中对应的 docset</p>
</li>
<li>
<p>在 XCode 中 Preferences/Download 中下载对应的文档，XCode 会校验刚才复制过去的文件进行安装</p>
</li>
</ol>
<h2>模拟器</h2>
<ol>
<li>打开 XCode，Preferences/Download 中下载模拟器</li>
<li>打开 Console.app，清空日志</li>
<li>在 XCode 中取消下载</li>
<li>在 Console.app 中会看到取消的日志，其他包含完整的下载地址</li>
<li>通过 asia2 等第三方工具下载刚才地址中的文件</li>
<li>把下载好的文件复制到 <code>~/Library/Caches/com.apple.dt.Xcode/Downloads</code> 中，如果没有 <code>Downloads</code> 文件夹就创建一个，
如果 <code>Downloads</code> 中有后缀为 <code>dvtdownloadableindex</code> 的文件，全部删除</li>
<li>在 XCode 中安装刚才下载的模拟器</li>
</ol>
<blockquote>
<p>如果需要删除不需要的模拟器，可以在 <code>/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs</code> 中直接删除</p>
</blockquote>
<p>---EOF---</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2&gt;缘起&lt;/h2&gt;
&lt;p&gt;由于众所周知的原因，也就是 Apple 的云真的很烂，App Store 还能通过 DNS 等手段加速更新。对于 XCode 简直就是噩梦，挂不挂都是一个样子，非常慢。不幸中之大幸，虽然 XCode 本身下载很慢，但是可以手动下载好之后，通过 XCo
    
    </summary>
    
      <category term="Notes" scheme="https://gythialy.github.io/categories/Notes/"/>
    
    
      <category term="OS X" scheme="https://gythialy.github.io/tags/OS-X/"/>
    
      <category term="XCode" scheme="https://gythialy.github.io/tags/XCode/"/>
    
  </entry>
  
  <entry>
    <title>MSYS2 配置</title>
    <link href="https://gythialy.github.io/msys2-config/"/>
    <id>https://gythialy.github.io/msys2-config/</id>
    <published>2016-03-24T02:25:10.000Z</published>
    <updated>2017-08-07T15:55:12.427Z</updated>
    
    <content type="html"><![CDATA[<h2>介绍</h2>
<p><a href="https://msys2.github.io/" target="_blank" rel="external">MSYS2</a> 是 MSYS 的一个升级版, 准确的说是集成了 pacman 和 Mingw-w64的 Cygwin 升级版。与 MSYS 最大的区别是移植了 Pacman。</p>
<h3>比较</h3>
<table>
<thead>
<tr>
<th style="text-align:left">特点</th>
<th style="text-align:left">Cygwin</th>
<th style="text-align:left">MinGW/MSYS</th>
<th style="text-align:left">MSYS2</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">是否GNU</td>
<td style="text-align:left">否</td>
<td style="text-align:left">是</td>
<td style="text-align:left">是</td>
</tr>
<tr>
<td style="text-align:left">软件支持？</td>
<td style="text-align:left">支持绝大多数的 GNU 软件</td>
<td style="text-align:left">支持常用软件</td>
<td style="text-align:left">支持大多数 GNU 软件</td>
</tr>
<tr>
<td style="text-align:left">更类似 Linux？</td>
<td style="text-align:left">在 Windows 中模拟 Linux</td>
<td style="text-align:left">实现了 Bash 等主要的 Linux 程序</td>
<td style="text-align:left">原生 64/32bit 支持</td>
</tr>
<tr>
<td style="text-align:left">GCC 编译</td>
<td style="text-align:left">独立的 Windows/Linux 程序编译(MingGW32 交叉编译/依赖 cygwin1.dll)</td>
<td style="text-align:left">独立的 Windows 程序编译</td>
<td style="text-align:left">独立的 Windows 程序编译</td>
</tr>
<tr>
<td style="text-align:left">中文支持</td>
<td style="text-align:left">直接支持中文显示和输入法</td>
<td style="text-align:left">需要配置才能支持中文显示和输入，删除一个中文字符需要删除 2 次</td>
<td style="text-align:left">支持中文显示和输入法，中文帮助系统和中文提示（部分软件）</td>
</tr>
<tr>
<td style="text-align:left">运行速度</td>
<td style="text-align:left">慢</td>
<td style="text-align:left">快</td>
<td style="text-align:left">快</td>
</tr>
</tbody>
</table>
<h2>安装</h2>
<h3>安装 MSYS2</h3>
<p>从官网下载 <a href="https://msys2.github.io/" target="_blank" rel="external">MSYS2</a> 安装文件, 一路 Next 即可。</p>
<h3>安装开发环境</h3>
<p><code>pacman -S --needed base-devel msys2-devel mingw-w64-x86_64-toolchain</code></p>
<h2>配置</h2>
<h3>环境变量</h3>
<p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">MSYS_HOME=D:\msys64</div><div class="line">MINGW_HOME=D:\msys64\mingw64</div><div class="line">LIBRARY_PATH=D:\msys64\mingw64\lib</div></pre></td></tr></table></figure></p>
<h3>镜像配置</h3>
<p>如果网络环境不好的话，可以增加国内的镜像，速度改进非常明显。</p>
<p>修改 <code>/etc/pacman.d/</code> 文件夹中修改 <code>mirrorlist</code> 开头的三个文件：</p>
<ul>
<li><code>mirrorlist.mingw32</code></li>
</ul>
<p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">##</div><div class="line">## 32-bit Mingw-w64 repository mirrorlist</div><div class="line">##</div><div class="line">Server=http://mirrors3.ustc.edu.cn/msys2/REPOS/MINGW/i686</div><div class="line"></div><div class="line">## Primary</div><div class="line">## msys2.org</div><div class="line">Server = http://repo.msys2.org/mingw/i686</div><div class="line">Server = http://downloads.sourceforge.net/project/msys2/REPOS/MINGW/i686</div><div class="line">Server = http://www2.futureware.at/~nickoe/msys2-mirror/i686/</div></pre></td></tr></table></figure></p>
<ul>
<li><code>mirrorlist.mingw64</code></li>
</ul>
<p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">##</div><div class="line">## 64-bit Mingw-w64 repository mirrorlist</div><div class="line">##</div><div class="line"></div><div class="line">Server=http://mirrors3.ustc.edu.cn/msys2/REPOS/MINGW/x86_64</div><div class="line">## Primary</div><div class="line">## msys2.org</div><div class="line">Server = http://repo.msys2.org/mingw/x86_64</div><div class="line">Server = http://downloads.sourceforge.net/project/msys2/REPOS/MINGW/x86_64</div><div class="line">Server = http://www2.futureware.at/~nickoe/msys2-mirror/x86_64/</div></pre></td></tr></table></figure></p>
<ul>
<li><code>mirrorlist.msys</code></li>
</ul>
<p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">##</div><div class="line">## MSYS2 repository mirrorlist</div><div class="line">##</div><div class="line"></div><div class="line">Server=http://mirrors3.ustc.edu.cn/msys2/REPOS/MSYS2/$arch</div><div class="line"></div><div class="line">## Primary</div><div class="line">## msys2.org</div><div class="line">Server = http://repo.msys2.org/msys/$arch</div><div class="line">Server = http://downloads.sourceforge.net/project/msys2/REPOS/MSYS2/$arch</div><div class="line">Server = http://www2.futureware.at/~nickoe/msys2-mirror/msys/$arch/</div></pre></td></tr></table></figure></p>
<h3>代理</h3>
<p>如果需要通过代理才能上网的话，可以在 <code>/etc/profile.d/</code> 增加 <code>proxy.sh</code>，内容如下:</p>
<p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">export http_proxy=%PROXY_SERVER%:%PROXY_PORT%</div><div class="line">export https_proxy=%PROXY_SERVER%:%PROXY_PORT%</div><div class="line">export ftp_proxy=%PROXY_SERVER%:%PROXY_PORT%</div><div class="line">export HTTP_PROXY=%PROXY_SERVER%:%PROXY_PORT%</div><div class="line">export HTTPS_PROXY=%PROXY_SERVER%:%PROXY_PORT%</div><div class="line">export FTP_PROXY=%PROXY_SERVER%:%PROXY_PORT%</div></pre></td></tr></table></figure></p>
<h3>用户目录</h3>
<p>修改 <code>/etc/fstab</code>，映射用户目录，与宿主共享配置，这样类似 gitconfig 这样的配置只需要配置一份。</p>
<p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"># For a description of the file format, see the Users Guide</div><div class="line"># http://cygwin.com/cygwin-ug-net/using.html#mount-table</div><div class="line"></div><div class="line"># DO NOT REMOVE NEXT LINE. It remove cygdrive prefix from path</div><div class="line">none / cygdrive binary,posix=0,noacl,user 0 0</div><div class="line">C:/Users /home ntfs binary,noacl,auto 1 1</div></pre></td></tr></table></figure></p>
<h3>公用 HOME 目录</h3>
<p>环境变量中添加 <code>MSYS2_PATH_TYPE</code> 值为 <code>inherit</code></p>
<h2>包管理</h2>
<ul>
<li>
<p>刷新软件包 <code>pacman -Sy</code></p>
</li>
<li>
<p>安装新包 <code>pacman -S &lt;package_names|package_groups&gt;</code></p>
</li>
<li>
<p>删除 <code>pacman -R &lt;package_names|package_groups&gt;</code></p>
</li>
<li>
<p>搜索 <code>pacman -Ss &lt;name_pattern&gt;</code></p>
</li>
</ul>
<blockquote>
<p>更多请参考 <a href="https://wiki.archlinux.org/index.php/pacman" target="_blank" rel="external">Arch Linux wiki</a>.</p>
</blockquote>
<h2>安装<code>zsh</code>和<code>oh my zsh</code></h2>
<ul>
<li>安装<code>zsh</code></li>
</ul>
<p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">pacman -Syu</div><div class="line">pacman -S zsh</div></pre></td></tr></table></figure></p>
<ul>
<li>安装 <code>oh my zsh</code></li>
</ul>
<p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sh -c "$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)"</div></pre></td></tr></table></figure></p>
<blockquote>
<p>zsh 的配置文件是 <code>~/.zshrc</code>，可以通过编辑这个文件来指定主题，插件。</p>
</blockquote>
<h2>重新安装</h2>
<p>如果在使用过程中， <a href="">MSYS2</a> 出现不可恢复的问题的时候，可以通过保存安装的 packages 到文件中，再通过此文件重新安装。</p>
<ul>
<li>保存现有安装包列表到 C 盘中的 <code>packages.txt</code></li>
</ul>
<p><code>pacman -Qqe | xargs echo &gt; /c/packages.txt ; exit</code></p>
<ul>
<li>根据保存的 <code>packages.txt</code> 安装</li>
</ul>
<p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">pacman -Sy</div><div class="line">pacman --needed -S bash pacman pacman-mirrors msys2-runtime</div><div class="line">pacman -S --needed --force $(cat /c/packages.txt)</div></pre></td></tr></table></figure></p>
<h2>坑</h2>
<p>如果你使用 MacType 的话，请一定在  <code>default.ini</code> (MacType的配置文件) 添加 gpg/pacman 的例外。</p>
<p><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="section">[UnloadDll]</span></div><div class="line">gpg.exe</div><div class="line">pacman.exe</div></pre></td></tr></table></figure></p>
<blockquote>
<p>via #393 <a href="https://github.com/Alexpux/MSYS2-packages/issues/393" target="_blank" rel="external">GPGME error: Invalid crypto engine</a></p>
</blockquote>
<p>如果你使用 VirtualBox 4.3.14+ 的话，也需要把相关进程排除。via <a href="https://donneryst.com/blog/virtualbox-4-3-12%E4%BB%A5%E5%90%8E%E7%9A%84e_fail-0x80004005%E9%97%AE%E9%A2%98.html" target="_blank" rel="external">VirtualBox 4.3.12以后的E_FAIL (0x80004005)问题</a></p>
<p>---EOF---</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2&gt;介绍&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://msys2.github.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;MSYS2&lt;/a&gt; 是 MSYS 的一个升级版, 准确的说是集成了 pacman 和 Mingw-w64的 Cygwi
    
    </summary>
    
      <category term="Notes" scheme="https://gythialy.github.io/categories/Notes/"/>
    
    
      <category term="msys2" scheme="https://gythialy.github.io/tags/msys2/"/>
    
  </entry>
  
  <entry>
    <title>修正 SourceTree 无法识别 msys2 中 Git</title>
    <link href="https://gythialy.github.io/fix-sourcetree-can-not-find-msys2-git/"/>
    <id>https://gythialy.github.io/fix-sourcetree-can-not-find-msys2-git/</id>
    <published>2016-03-23T01:33:32.000Z</published>
    <updated>2017-08-07T15:55:12.427Z</updated>
    
    <content type="html"><![CDATA[<h3>问题</h3>
<p>SourceTree 真是一个让人又爱又恨的产品，小问题不断，但是在免费的 Git 的 GUI 里面还算优秀的。因为 TortoiseGit 对 msys2 支持不好，我又回到 SourceTree 阵营了, SourceTree 为主， CLI 辅助。 因为 SourceTree 不能识别 msys2 的 Git，虽然其自带一个内嵌的 Git，这样就导致了我需要配置两份全局的 gitconfig。</p>
<h3>解决方案</h3>
<p>其实原因很简单，因为 SourceTree 要求 Git 所在目录必须同时有 bin 和 cmd 文件夹。听起来很2是吧？知道了原因要解决起来就很简单。</p>
<ol>
<li>
<p>我的 msys2 安装在 <code>d:\msys64</code>，在 SourceTree 中选择 <strong>系统安装的Git</strong> (工具/选项/Git)</p>
<p>在 AppData 中的 <code>user.config</code> 配置中 <code>GitSystemPath</code> 节点会自动识别出 msys2 的路径
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">setting</span> <span class="attr">name</span>=<span class="string">"GitSystemPath"</span> <span class="attr">serializeAs</span>=<span class="string">"String"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">value</span>&gt;</span>D:\msys64\usr<span class="tag">&lt;/<span class="name">value</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">setting</span>&gt;</span></div></pre></td></tr></table></figure></p>
</li>
<li>
<p>通过 <a href="https://technet.microsoft.com/en-us/library/cc753194.aspx" target="_blank" rel="external">mklink</a> 建立一个链接</p>
<p>在 <code>D:\msys64\usr</code> 建立链接
<code>mklink /D cmd bin</code></p>
</li>
</ol>
<p>---EOF---</p>
]]></content>
    
    <summary type="html">
    
      &lt;h3&gt;问题&lt;/h3&gt;
&lt;p&gt;SourceTree 真是一个让人又爱又恨的产品，小问题不断，但是在免费的 Git 的 GUI 里面还算优秀的。因为 TortoiseGit 对 msys2 支持不好，我又回到 SourceTree 阵营了, SourceTree 为主， CLI 辅
    
    </summary>
    
      <category term="Notes" scheme="https://gythialy.github.io/categories/Notes/"/>
    
    
      <category term="SourceTree" scheme="https://gythialy.github.io/tags/SourceTree/"/>
    
      <category term="Git" scheme="https://gythialy.github.io/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title>eDNA C API 介绍</title>
    <link href="https://gythialy.github.io/edna-api-demo-by-c/"/>
    <id>https://gythialy.github.io/edna-api-demo-by-c/</id>
    <published>2016-03-22T01:30:11.000Z</published>
    <updated>2017-08-07T15:55:12.427Z</updated>
    
    <content type="html"><![CDATA[<h2>介绍</h2>
<p>eDNA是一个领导性的实时/历史数据系统。eDNA采集、存储和展示大量的工程和运行信息。eDNA将深入在整个企业范围内的数据采集上来，以极高的无损压缩方式存储起来，使得以时间序列频繁变化的数据能以原有的数据精度和时间精度在线保存多达几十年。eDNA使基于运行状况的及时和准确的决策成为可能，极大地降低运行成本。eDNA具有完全分布的体系结构，让正确的人在正确的时间做出正确的决定。eDNA是一套实时的运行管理解决方案，它提供了对你的生产运行中无限制的观察和分析，使得你能够根据丰富的信息迅速地做出决策，你的一线生产能力将会大大提高。via <a href="http://www.ybsoftware.com.cn/products.asp" target="_blank" rel="external">印步</a></p>
<h2>API</h2>
<p>eDNA 分为两种：</p>
<ul>
<li>常规API：支持 C/C++/Visual Basic 等。这种方式需要自己组装报文，虽然有相关 API 函数支持，但是实际应用起来还是比较麻烦</li>
<li>EzDNA：封装了常用的操作，只需要引入一个头文件 (<code>EzDnaApi.h</code>) 即可。</li>
</ul>
<blockquote>
<p>注：两种方式都需要安装 eDNA 的 Client 程序。</p>
</blockquote>
<h2>示例代码</h2>
<p>涉及到的 API 函数：</p>
<ul>
<li><code>DNAGoodPointFormat</code> 检查测点名称是否符合命名规范</li>
<li><code>DoesIdExist</code> 检查测点是否存在</li>
<li><code>DNAGetRTFull</code> 查询指定测点的实时数据</li>
<li><code>DNAGetHSFull</code> 同上</li>
</ul>
<blockquote>
<p>注： <code>DNAGetHSFull</code> 查询到的时间精度是毫秒，如果对时间有要求，建议使用此函数。但是在实际使用过程中，发现此函数有时候会查询不到数据。</p>
</blockquote>
<p><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">int16_t</span> getsnapshot()</div><div class="line">&#123;</div><div class="line">    <span class="keyword">edna_tag_t</span>  *tag;</div><div class="line">    <span class="keyword">int32_t</span>     index;</div><div class="line">    <span class="keyword">int32_t</span>     *buff_size;</div><div class="line">    <span class="keyword">int16_t</span>     counter;</div><div class="line">    <span class="keyword">int32_t</span>		ret;</div><div class="line">    <span class="keyword">int8_t</span>      log_tag[MAX_BUFF_SIZE];</div><div class="line">    <span class="keyword">int8_t</span>	szValue[EDNA_LEN];</div><div class="line">    <span class="keyword">int32_t</span> ptTime;</div><div class="line"></div><div class="line">    <span class="keyword">int8_t</span> szmS[EDNA_LEN];</div><div class="line">    <span class="keyword">uint16_t</span> pusStatus;</div><div class="line">    <span class="keyword">int8_t</span> szStatus[EDNA_LEN];</div><div class="line">    <span class="keyword">int8_t</span> szDesc[EDNA_DESC_LEN];</div><div class="line">    <span class="keyword">int8_t</span> szUnits[EDNA_LEN];</div><div class="line"></div><div class="line">    <span class="built_in">strncpy</span>(log_tag, <span class="string">"getsnapshot"</span>, MAX_BUFF_SIZE);</div><div class="line">    <span class="comment">// init parameters</span></div><div class="line">    <span class="comment">// ....</span></div><div class="line"></div><div class="line">    <span class="keyword">for</span> (index = <span class="number">0</span>; index &lt; ptbl_data-&gt;point_size; index++, tag++)</div><div class="line">    &#123;</div><div class="line">        <span class="comment">// other stuff</span></div><div class="line">        <span class="comment">// ...</span></div><div class="line"></div><div class="line">        <span class="keyword">if</span> (tag-&gt;flag == E_EMPTY_TAG) <span class="keyword">continue</span>;</div><div class="line"></div><div class="line">        <span class="comment">// tests the string, validating it as a fully qualified eDNA point name</span></div><div class="line">        <span class="keyword">if</span> (DNAGoodPointFormat(tag-&gt;name) == <span class="number">0</span>)</div><div class="line">        &#123;</div><div class="line">            tag-&gt;flag = INVALID;</div><div class="line">            <span class="keyword">continue</span>;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="comment">// check point name is exist</span></div><div class="line">        <span class="keyword">if</span> (!DoesIdExist(tag-&gt;name))</div><div class="line">        &#123;</div><div class="line">            tag-&gt;flag = NOT_EXIST;</div><div class="line">            <span class="keyword">continue</span>;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="comment">// retrieves the value, time and status in their raw formats</span></div><div class="line">        ret = DNAGetRTFull(tag-&gt;name, &amp;tag-&gt;value, szValue, EDNA_LEN, &amp;ptTime, tag-&gt;ts,</div><div class="line">                          EDNA_LEN, &amp;pusStatus, szStatus, EDNA_LEN, szDesc,</div><div class="line">                          EDNA_DESC_LEN, szUnits, EDNA_LEN);</div><div class="line"></div><div class="line"><span class="meta">#<span class="meta-keyword">if</span> 0</span></div><div class="line"></div><div class="line">        ret = DNAGetHSFull(tag-&gt;name, &amp;tag-&gt;value, szValue, EDNA_LEN, &amp;ptTime, tag-&gt;ts,</div><div class="line">                           EDNA_LEN, &amp;tag-&gt;ms, szmS, EDNA_LEN, &amp;pusStatus, szStatus,</div><div class="line">                           EDNA_LEN, szDesc, EDNA_DESC_LEN, szUnits, EDNA_LEN);</div><div class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></div><div class="line"></div><div class="line"></div><div class="line">        tag-&gt;flag = (ret == <span class="number">0</span>) ? NORMAL : OFFLINE;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="keyword">return</span> TRUE;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>---EOF---</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2&gt;介绍&lt;/h2&gt;
&lt;p&gt;eDNA是一个领导性的实时/历史数据系统。eDNA采集、存储和展示大量的工程和运行信息。eDNA将深入在整个企业范围内的数据采集上来，以极高的无损压缩方式存储起来，使得以时间序列频繁变化的数据能以原有的数据精度和时间精度在线保存多达几十年。eDNA使
    
    </summary>
    
      <category term="Programming" scheme="https://gythialy.github.io/categories/Programming/"/>
    
    
      <category term="C" scheme="https://gythialy.github.io/tags/C/"/>
    
      <category term="eDNA" scheme="https://gythialy.github.io/tags/eDNA/"/>
    
      <category term="rtdb" scheme="https://gythialy.github.io/tags/rtdb/"/>
    
  </entry>
  
  <entry>
    <title>OSI PI C API 介绍</title>
    <link href="https://gythialy.github.io/osi-pi-api-demo-by-c/"/>
    <id>https://gythialy.github.io/osi-pi-api-demo-by-c/</id>
    <published>2016-03-21T05:26:01.000Z</published>
    <updated>2017-08-07T15:55:12.427Z</updated>
    
    <content type="html"><![CDATA[<h2>介绍</h2>
<p>PI（Plant Information System）是由美国 OSIsoft 公司开发的一套基于 Client/Server 结构的商品化软件应用平台，是过程工业全厂信息集成的必然选择。作为工厂底层控制网络与上层管理信息系统网络连接的桥梁，PI 在工厂信息集成中扮演着特殊和重要的角色。更详细的介绍，可参考<a href="http://baike.baidu.com/view/1510581.htm" target="_blank" rel="external">百度百科</a>或者<a href="https://www.osisoft.com/software-support/what-is-pi/What_Is_PI.aspx" target="_blank" rel="external">官方网站</a></p>
<h2>登录数据库</h2>
<p>要访问数据库，有两种方法，一种是通过用户名和密码登录，另一种是通过 PI Trust。官方是不建议使用密码登录的，所以在开发应用的时候，尽可能使用 PI Trust，但是国内的情况比较混乱，很多生产环境都还是使用第一次方式。</p>
<p>下面分别介绍两种登录方法的使用</p>
<h3>用户名/密码登录</h3>
<p>这种方式比较简单，Server 端几乎不需要任何配置，只要简单添加一个用户即可。</p>
<p>涉及到的 API 函数：</p>
<ul>
<li><code>piut_setservernode</code> 设置 PI Server 节点，一般就是 Server 的 IP 地址</li>
<li><code>piut_isconnected</code> 是否已经和 Server 连接</li>
<li><code>piut_login</code> 传入用户名/密码，根据返回值判断是否连接成功，如果需要写数据的话，需要注意写权限</li>
</ul>
<blockquote>
<p>在 PI 3.x 中，默认是不启用用户名/密码登录的，需要注意</p>
</blockquote>
<h3>PI Trust 登录</h3>
<p>这种方式，是官方推荐做法，需要在 Server 段添加相应的 PI Trust 设置，可以设置 IP 地址/Client 名称/进程名字等，配置非常灵活。</p>
<p>涉及到的 API 函数：</p>
<ul>
<li><code>piut_setservernode</code> 同上</li>
<li><code>piut_isconnected</code> 同上</li>
<li><code>piut_setprocname</code> 设置 Client 的进程名，需要和 Server 段设置一致</li>
<li><code>piut_connect</code> 连接 Server</li>
</ul>
<p>示例代码，功能就是根据配置参数自动判断连接方式，因为我们生产环境是个很老的现场，所以优先使用用户名/密码登录</p>
<p><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">error_t</span> connect_pi(<span class="keyword">server_info_t</span> *server)</div><div class="line">&#123;</div><div class="line">    <span class="keyword">int32_t</span> result;</div><div class="line">    <span class="keyword">int32_t</span> valid;</div><div class="line">    <span class="keyword">int8_t</span>  version[SERVER_FIELD_SIZE];</div><div class="line">    <span class="keyword">int8_t</span>  log_tag[MAX_BUFF_SIZE];</div><div class="line">    <span class="keyword">int8_t</span>  pro_name[SERVER_FIELD_SIZE];</div><div class="line"></div><div class="line">    valid = PIREAD;</div><div class="line"></div><div class="line">    <span class="built_in">strncpy</span>(log_tag, <span class="string">"connect pi"</span>, MAX_BUFF_SIZE);</div><div class="line"></div><div class="line">    <span class="keyword">if</span> (piut_isconnected() == <span class="number">0</span>)</div><div class="line">    &#123;</div><div class="line">        <span class="comment">//  retrieves the version number of the PI-API.</span></div><div class="line">        <span class="keyword">if</span> (piut_getapiversion(version, <span class="keyword">sizeof</span>(version)) == <span class="number">0</span>)</div><div class="line">        &#123;</div><div class="line">            ftrace_log(log_tag, <span class="string">"PI-API version %s"</span>, version);</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="keyword">if</span> (server-&gt;misc3 == <span class="literal">NULL</span> || <span class="built_in">strlen</span>(server-&gt;misc3) == <span class="number">0</span>)</div><div class="line">        &#123;</div><div class="line">            <span class="built_in">strncpy</span>(pro_name, <span class="string">"pi_snap"</span>, SERVER_FIELD_SIZE);</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">else</span></div><div class="line">        &#123;</div><div class="line">            <span class="built_in">strncpy</span>(pro_name, server-&gt;misc3, SERVER_FIELD_SIZE);</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="comment">// sets the active PI Server node where the data for the subsequent</span></div><div class="line">        <span class="comment">// PI-API calls will be resolved</span></div><div class="line">        result = piut_setservernode(server-&gt;server_ip);</div><div class="line"></div><div class="line">        <span class="keyword">if</span> (result)</div><div class="line">        &#123;</div><div class="line">            ftrace_log(log_tag, <span class="string">"piut_setservernode: can not connect to %s"</span>, server-&gt;server_ip);</div><div class="line">            <span class="keyword">return</span> E_CONNECT_FAILED;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="keyword">if</span> (server-&gt;usr_name != <span class="literal">NULL</span> &amp;&amp; <span class="built_in">strlen</span>(server-&gt;usr_name) &gt; <span class="number">0</span>)</div><div class="line">        &#123;</div><div class="line">            <span class="comment">// establishes a user's access to PI System data based on a login to a configured user database</span></div><div class="line">            result = piut_login(server-&gt;usr_name, server-&gt;usr_pwd, &amp;valid);</div><div class="line"></div><div class="line">            <span class="keyword">if</span> (result == <span class="number">0</span>)</div><div class="line">            &#123;</div><div class="line">                ftrace_log(log_tag, <span class="string">"piut_login: connect to %s successful, valid=%d"</span>, server-&gt;server_ip, valid);</div><div class="line">                <span class="keyword">return</span> E_SUCCESS;</div><div class="line">            &#125;</div><div class="line"></div><div class="line">            ferror_log(log_tag, <span class="string">"piut_login: connect to %s failed, ret=%d"</span>, server-&gt;server_ip, result);</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="comment">//sets the global process name to the passed string</span></div><div class="line">        piut_setprocname(pro_name);</div><div class="line">        result = piut_connect(server-&gt;server_ip);</div><div class="line"></div><div class="line">        <span class="keyword">if</span> (result)</div><div class="line">        &#123;</div><div class="line">            ferror_log(log_tag, <span class="string">"piut_connect: connect to %s failed, ret=%d"</span>, server-&gt;server_ip, result);</div><div class="line">            <span class="keyword">return</span> E_CONNECT_FAILED;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="keyword">return</span> E_SUCCESS;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h2>初始化测点信息</h2>
<p>连接上 Server 之后，需要根据测点信息，转换成数据库中对应的id，方便后面的操作</p>
<p>涉及到的 API 函数：</p>
<ul>
<li><code>pipt_findpoint</code> 转换测点名称为测点号 (必须)</li>
<li><code>pipt_pointtypex</code> 根据测点号查询对应的测点类型</li>
<li><code>pipt_displaydigits</code> 根据测点号查询显示位数</li>
</ul>
<p><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">static</span> int16_t <span class="title">init_pi_tag</span><span class="params">(<span class="keyword">pi_tag_t</span> *tag)</span></span></div><div class="line"><span class="function"></span>&#123;</div><div class="line">    <span class="keyword">int32_t</span> result;</div><div class="line">    <span class="keyword">int8_t</span>  log_tag[MAX_BUFF_SIZE];</div><div class="line">    <span class="built_in">strncpy</span>(log_tag, <span class="string">"init_pi_tag"</span>, MAX_BUFF_SIZE);</div><div class="line"></div><div class="line">    <span class="comment">// gets the point number for the given tagname</span></div><div class="line">    result = pipt_findpoint(tag-&gt;name, &amp;tag-&gt;point_id);</div><div class="line"></div><div class="line">    <span class="keyword">if</span> (result)</div><div class="line">    &#123;</div><div class="line">        ftrace_log(log_tag, <span class="string">"fetch point[%s] id failed."</span>, tag-&gt;name);</div><div class="line">        tag-&gt;stat = NOT_EXIST;</div><div class="line">        <span class="keyword">return</span> FALSE;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">// gets the data type code for the passed point number</span></div><div class="line">    result = pipt_pointtypex(tag-&gt;point_id, &amp;tag-&gt;pt_typex);</div><div class="line"></div><div class="line">    <span class="keyword">if</span> (result)</div><div class="line">    &#123;</div><div class="line">        ftrace_log(log_tag, <span class="string">"fetch point[%s] typex failed."</span>, tag-&gt;name);</div><div class="line">        tag-&gt;stat = INVALID;</div><div class="line">        <span class="keyword">return</span> FALSE;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">// gets the display digits attribute for the passed point number</span></div><div class="line">    result = pipt_displaydigits(tag-&gt;point_id, &amp;tag-&gt;display_prec);</div><div class="line"></div><div class="line">    <span class="keyword">if</span> (result)</div><div class="line">    &#123;</div><div class="line">        ftrace_log(log_tag, <span class="string">"fetch point[%s] display digits failed."</span>, tag-&gt;name);</div><div class="line">        tag-&gt;display_prec = <span class="number">-5</span>;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    tag-&gt;stat = NORMAL;</div><div class="line">    tag-&gt;rval = (<span class="keyword">float64_t</span>) <span class="number">0.0</span>;</div><div class="line">    tag-&gt;istat = <span class="number">0</span>;</div><div class="line">    tag-&gt;ival = <span class="number">0</span>;</div><div class="line">    tag-&gt;flag = <span class="number">0</span>;</div><div class="line"></div><div class="line">    ftrace_log(log_tag, <span class="string">"name:%s, id:%d, dis_prec: %d,type: %d"</span>, tag-&gt;name, tag-&gt;point_id, tag-&gt;display_prec, (<span class="keyword">int32_t</span>)tag-&gt;pt_typex);</div><div class="line"></div><div class="line">    <span class="keyword">switch</span> (tag-&gt;pt_typex)</div><div class="line">    &#123;</div><div class="line">    <span class="keyword">case</span> PI_Type_PIstring:</div><div class="line">    <span class="keyword">case</span> PI_Type_blob:</div><div class="line">    <span class="keyword">case</span> PI_Type_PItimestamp:</div><div class="line">        <span class="keyword">if</span> (tag-&gt;bsize == <span class="number">0</span>)</div><div class="line">        &#123;</div><div class="line">            <span class="comment">/* Skip allocation if a subsequent run. */</span></div><div class="line">            <span class="keyword">if</span> ((tag-&gt;bval = (<span class="keyword">void</span> *)<span class="built_in">malloc</span>(BVALUE_BUFF)) == <span class="literal">NULL</span>)</div><div class="line">            &#123;</div><div class="line">                error_log(log_tag, <span class="string">"malloc bval failed."</span>);</div><div class="line">                destory();</div><div class="line">                <span class="keyword">return</span> E_MALLOC_FAILED;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        tag-&gt;bsize = (tag-&gt;bsize &gt; BVALUE_BUFF - <span class="number">1</span>) ? tag-&gt;bsize : BVALUE_BUFF - <span class="number">1</span>;</div><div class="line">        <span class="built_in">memset</span>(tag-&gt;bval, <span class="number">0</span>, (<span class="keyword">size_t</span>)(tag-&gt;bsize + <span class="number">1</span>));</div><div class="line">        <span class="keyword">break</span>;</div><div class="line"></div><div class="line">    <span class="keyword">case</span> PI_Type_int16:</div><div class="line">    <span class="keyword">case</span> PI_Type_int32:</div><div class="line">        tag-&gt;bsize = <span class="number">0</span>;</div><div class="line">        <span class="keyword">break</span>;</div><div class="line"></div><div class="line">    <span class="keyword">case</span> PI_Type_digital:</div><div class="line">        tag-&gt;bsize = <span class="number">0</span>;</div><div class="line">        <span class="keyword">break</span>;</div><div class="line"></div><div class="line">    <span class="keyword">default</span>:<span class="comment">/* floats, PI2 */</span></div><div class="line">        tag-&gt;bsize = <span class="number">0</span>;</div><div class="line">        <span class="keyword">break</span>;</div><div class="line">    &#125; <span class="comment">/* End switch */</span></div><div class="line"></div><div class="line">    <span class="keyword">return</span> TRUE;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h2>查询实时数据</h2>
<p>从快照中查询数据库，可以通过 <code>pisn_getsnapshot</code> 或者 <code>pisn_getsnapshotx</code> 查询，具体可查考 API 文档。</p>
<blockquote>
<p>注： <code>pisn_getsnapshot</code> 获取的时间只到秒级，如果对时间精度要求比较高，需要使用 <code>pisn_getsnapshotx</code>。</p>
</blockquote>
<p><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">int16_t</span> getsnapshot()</div><div class="line">&#123;</div><div class="line">    <span class="comment">// init parameters etc.</span></div><div class="line">    <span class="comment">// ...</span></div><div class="line"></div><div class="line">    <span class="keyword">for</span> (index = <span class="number">0</span>; index &lt; ptbl_data-&gt;point_size; index++, tag++)</div><div class="line">    &#123;</div><div class="line">        <span class="comment">// check server connection etc</span></div><div class="line">        <span class="comment">// ...</span></div><div class="line">        tag-&gt;rval = <span class="number">0</span>;</div><div class="line">        tag-&gt;istat = <span class="number">0</span>;</div><div class="line"></div><div class="line">        result = pisn_getsnapshot(tag-&gt;point_id, &amp;tag-&gt;rval, &amp;tag-&gt;istat, &amp;tag-&gt;time);</div><div class="line"></div><div class="line">        <span class="keyword">if</span> (result == <span class="number">0</span>)</div><div class="line">        &#123;</div><div class="line">            ftrace_log(log_tag, <span class="string">"%s[0x%p] pisn_getsnapshot, rval=%f,ival=%d,time=%d"</span>, tag-&gt;name, tag, tag-&gt;rval, tag-&gt;istat, tag-&gt;time);</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (result == <span class="number">-1</span>)</div><div class="line">        &#123;</div><div class="line">            tag-&gt;stat = NOT_EXIST;</div><div class="line">            ftrace_log(log_tag, <span class="string">"%s pisn_getsnapshot not exist, result=%d."</span>, tag-&gt;name, result);</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">else</span></div><div class="line">        &#123;</div><div class="line">            tag-&gt;stat = INVALID;</div><div class="line">            ftrace_log(log_tag, <span class="string">"%s pisn_getsnapshot failed, result=%d."</span>, tag-&gt;name, result);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="keyword">return</span> TRUE;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>---EOF---</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2&gt;介绍&lt;/h2&gt;
&lt;p&gt;PI（Plant Information System）是由美国 OSIsoft 公司开发的一套基于 Client/Server 结构的商品化软件应用平台，是过程工业全厂信息集成的必然选择。作为工厂底层控制网络与上层管理信息系统网络连接的桥梁，PI 
    
    </summary>
    
      <category term="Programming" scheme="https://gythialy.github.io/categories/Programming/"/>
    
    
      <category term="C" scheme="https://gythialy.github.io/tags/C/"/>
    
      <category term="rtdb" scheme="https://gythialy.github.io/tags/rtdb/"/>
    
      <category term="PI" scheme="https://gythialy.github.io/tags/PI/"/>
    
  </entry>
  
</feed>
